{"version":3,"file":"CocoaPods.js","sourceRoot":"","sources":["../src/CocoaPods.ts"],"names":[],"mappings":";;;AACA,mCAA4D;AAqB5D;;GAEG;AACI,KAAK,UAAU,gBAAgB,CAAC,WAAmB;IACxD,OAAO,MAAM,6BAAqB,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;AAC1E,CAAC;AAFD,4CAEC;AAcD;;GAEG;AACI,KAAK,UAAU,eAAe,CACnC,WAAmB,EACnB,UAA6B,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;;IAEnE,MAAM,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC;IAEzB,IAAI,OAAO,CAAC,YAAY,EAAE;QACxB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC/B;IACD,MAAM,kBAAU,CAAC,KAAK,EAAE,IAAI,EAAE;QAC5B,GAAG,EAAE,WAAW;QAChB,KAAK,QAAE,OAAO,CAAC,KAAK,mCAAI,MAAM;KAC/B,CAAC,CAAC;AACL,CAAC;AAbD,0CAaC","sourcesContent":["import { StdioOptions } from 'child_process';\nimport { spawnAsync, spawnJSONCommandAsync } from './Utils';\n\n/**\n * JSON representation of the podspec.\n */\nexport type Podspec = {\n  name: string;\n  version: string;\n  platforms: Record<string, string>;\n  source_files: string | string[];\n  exclude_files: string | string[];\n  preserve_paths: string | string[];\n  compiler_flags: string;\n  frameworks: string | string[];\n  pod_target_xcconfig: Record<string, string>;\n  xcconfig: Record<string, string>;\n  dependencies: Record<string, any>;\n  info_plist: Record<string, string>;\n  ios?: Podspec;\n};\n\n/**\n * Reads the podspec and returns it in JSON format.\n */\nexport async function readPodspecAsync(podspecPath: string): Promise<Podspec> {\n  return await spawnJSONCommandAsync('pod', ['ipc', 'spec', podspecPath]);\n}\n\ntype PodInstallOptions = Partial<{\n  /**\n   * Whether to use `--no-repo-update` flag.\n   */\n  noRepoUpdate: boolean;\n\n  /**\n   * stdio passed to the child process.\n   */\n  stdio: StdioOptions;\n}>;\n\n/**\n * Installs pods under given project path.\n */\nexport async function podInstallAsync(\n  projectPath: string,\n  options: PodInstallOptions = { noRepoUpdate: false, stdio: 'pipe' }\n): Promise<void> {\n  const args = ['install'];\n\n  if (options.noRepoUpdate) {\n    args.push('--no-repo-update');\n  }\n  await spawnAsync('pod', args, {\n    cwd: projectPath,\n    stdio: options.stdio ?? 'pipe',\n  });\n}\n"]}