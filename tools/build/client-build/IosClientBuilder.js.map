{"version":3,"file":"IosClientBuilder.js","sourceRoot":"","sources":["../../src/client-build/IosClientBuilder.ts"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,gDAAwB;AAExB,4CAA+C;AAC/C,4CAAiD;AACjD,wDAAwD;AACxD,oCAAsC;AAGtC,MAAqB,gBAAgB;IAArC;QACE,aAAQ,GAAa,KAAK,CAAC;IAgD7B,CAAC;IA9CC,UAAU;QACR,OAAO,cAAI,CAAC,IAAI,CACd,mBAAO,EACP,iBAAiB,EACjB,OAAO,EACP,UAAU,EACV,yBAAyB,EACzB,cAAc,CACf,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,UAAkB;QAC7B,OAAO,iDAAiD,UAAU,SAAS,CAAC;IAC9E,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,OAAO,MAAM,oCAAkB,EAAE,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,2BAAe,CAAC,mBAAO,EAAE;YAC7B,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QACH,MAAM,kBAAU,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,wBAAwB,CAAC,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAkB;QACjD,MAAM,WAAW,GAAG,cAAI,CAAC,IAAI,CAAC,oBAAQ,EAAE,iBAAiB,CAAC,CAAC;QAE3D,MAAM,kBAAU,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,GAAG,CAAC,EAAE;YAC5E,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;SACvC,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,kBAAE,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAE9C,MAAM,QAAQ;aACX,SAAS,CAAC;YACT,MAAM,EAAE,wBAAwB;YAChC,GAAG,EAAE,YAAY,UAAU,SAAS;YACpC,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,aAAa;SACnB,CAAC;aACD,OAAO,EAAE,CAAC;QAEb,MAAM,kBAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;CACF;AAjDD,mCAiDC","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport { podInstallAsync } from '../CocoaPods';\nimport { EXPO_DIR, IOS_DIR } from '../Constants';\nimport { iosAppVersionAsync } from '../ProjectVersions';\nimport { spawnAsync } from '../Utils';\nimport { ClientBuilder, Platform } from './types';\n\nexport default class IosClientBuilder implements ClientBuilder {\n  platform: Platform = 'ios';\n\n  getAppPath(): string {\n    return path.join(\n      IOS_DIR,\n      'simulator-build',\n      'Build',\n      'Products',\n      'Release-iphonesimulator',\n      'Exponent.app'\n    );\n  }\n\n  getClientUrl(appVersion: string): string {\n    return `https://dpq5q02fu5f55.cloudfront.net/Exponent-${appVersion}.tar.gz`;\n  }\n\n  async getAppVersionAsync(): Promise<string> {\n    return await iosAppVersionAsync();\n  }\n\n  async buildAsync() {\n    await podInstallAsync(IOS_DIR, {\n      stdio: 'inherit',\n    });\n    await spawnAsync('fastlane', ['ios', 'create_simulator_build'], { stdio: 'inherit' });\n  }\n\n  async uploadBuildAsync(s3Client, appVersion: string) {\n    const tempAppPath = path.join(EXPO_DIR, 'temp-app.tar.gz');\n\n    await spawnAsync('tar', ['-zcvf', tempAppPath, '-C', this.getAppPath(), '.'], {\n      stdio: ['ignore', 'ignore', 'inherit'], // only stderr\n    });\n\n    const file = fs.createReadStream(tempAppPath);\n\n    await s3Client\n      .putObject({\n        Bucket: 'exp-ios-simulator-apps',\n        Key: `Exponent-${appVersion}.tar.gz`,\n        Body: file,\n        ACL: 'public-read',\n      })\n      .promise();\n\n    await fs.remove(tempAppPath);\n  }\n}\n"]}