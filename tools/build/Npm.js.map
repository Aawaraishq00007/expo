{"version":3,"file":"Npm.js","sourceRoot":"","sources":["../src/Npm.ts"],"names":[],"mappings":";;;AAAA,mCAA4D;AAE/C,QAAA,yBAAyB,GAAG,iBAAiB,CAAC;AAuB3D;;GAEG;AACI,KAAK,UAAU,mBAAmB,CACvC,WAAmB,EACnB,OAAgB;IAEhB,IAAI;QACF,OAAO,MAAM,6BAAqB,CAAC,KAAK,EAAE;YACxC,MAAM;YACN,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,WAAW;YACnD,QAAQ;SACT,CAAC,CAAC;KACJ;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAbD,kDAaC;AAED;;GAEG;AACI,KAAK,UAAU,mBAAmB,CACvC,UAAkB,EAClB,UAAkB,QAAQ,EAC1B,SAAkB,KAAK;IAEvB,MAAM,IAAI,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAEjE,IAAI,MAAM,EAAE;QACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACxB;IACD,MAAM,kBAAU,CAAC,KAAK,EAAE,IAAI,EAAE;QAC5B,GAAG,EAAE,UAAU;KAChB,CAAC,CAAC;AACL,CAAC;AAbD,kDAaC;AAED;;GAEG;AACI,KAAK,UAAU,WAAW,CAC/B,WAAmB,EACnB,OAAe,EACf,OAAe;IAEf,MAAM,kBAAU,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,WAAW,IAAI,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;AACrF,CAAC;AAND,kCAMC;AAED;;GAEG;AACI,KAAK,UAAU,cAAc,CAAC,WAAmB,EAAE,OAAe;IACvE,MAAM,kBAAU,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC;AACpE,CAAC;AAFD,wCAEC;AAED;;GAEG;AACI,KAAK,UAAU,mBAAmB,CAAC,QAAgB;IACxD,OAAO,MAAM,6BAAqB,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;AAChF,CAAC;AAFD,kDAEC;AAED;;GAEG;AACI,KAAK,UAAU,yBAAyB,CAC7C,WAAmB,EACnB,QAAgB;IAEhB,MAAM,kBAAU,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;AACpF,CAAC;AALD,8DAKC;AAED;;GAEG;AACI,KAAK,UAAU,WAAW;IAC/B,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,kBAAU,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;KACtB;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAPD,kCAOC","sourcesContent":["import { spawnAsync, spawnJSONCommandAsync } from './Utils';\n\nexport const EXPO_DEVELOPERS_TEAM_NAME = 'expo:developers';\n\nexport type PackageViewType = null | {\n  name: string;\n  version: string;\n  'dist-tags': {\n    latest: string;\n    [tag: string]: string;\n  };\n  versions: string[];\n  time: {\n    created: string;\n    modified: string;\n    [time: string]: string;\n  };\n  maintainers: string[];\n  description: string;\n  author: string;\n  gitHead: string;\n  // and more but these are the basic ones, we shouldn't need more.\n  [key: string]: unknown;\n};\n\n/**\n * Runs `npm view` for package with given name. Returns null if package is not published yet.\n */\nexport async function getPackageViewAsync(\n  packageName: string,\n  version?: string\n): Promise<PackageViewType> {\n  try {\n    return await spawnJSONCommandAsync('npm', [\n      'view',\n      version ? `${packageName}@${version}` : packageName,\n      '--json',\n    ]);\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * Publishes a package at given directory to the global npm registry.\n */\nexport async function publishPackageAsync(\n  packageDir: string,\n  tagName: string = 'latest',\n  dryRun: boolean = false\n): Promise<void> {\n  const args = ['publish', '--tag', tagName, '--access', 'public'];\n\n  if (dryRun) {\n    args.push('--dry-run');\n  }\n  await spawnAsync('npm', args, {\n    cwd: packageDir,\n  });\n}\n\n/**\n * Adds dist-tag to a specific version of the package.\n */\nexport async function addTagAsync(\n  packageName: string,\n  version: string,\n  tagName: string\n): Promise<void> {\n  await spawnAsync('npm', ['dist-tag', 'add', `${packageName}@${version}`, tagName]);\n}\n\n/**\n * Removes package's tag with given name.\n */\nexport async function removeTagAsync(packageName: string, tagName: string): Promise<void> {\n  await spawnAsync('npm', ['dist-tag', 'rm', packageName, tagName]);\n}\n\n/**\n * Gets a list of user names in the team with given team name.\n */\nexport async function getTeamMembersAsync(teamName: string): Promise<string[]> {\n  return await spawnJSONCommandAsync('npm', ['team', 'ls', teamName, '--json']);\n}\n\n/**\n * Adds a package to organization team granting access to everyone in the team.\n */\nexport async function grantReadWriteAccessAsync(\n  packageName: string,\n  teamName: string\n): Promise<void> {\n  await spawnAsync('npm', ['access', 'grant', 'read-write', teamName, packageName]);\n}\n\n/**\n * Returns a name of the currently logged in user or `null` if logged out.\n */\nexport async function whoamiAsync(): Promise<string | null> {\n  try {\n    const { stdout } = await spawnAsync('npm', ['whoami']);\n    return stdout.trim();\n  } catch (e) {\n    return null;\n  }\n}\n"]}