{"version":3,"file":"fetchTemplate.js","sourceRoot":"","sources":["../../src/generate-module/fetchTemplate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAmC;AACnC,kDAA0B;AAC1B,6CAA+B;AAC/B,oDAA4B;AAC5B,2CAA6B;AAE7B,MAAM,gBAAgB,GAAG,6BAA6B,CAAC;AAEvD;;;;GAIG;AACY,KAAK,UAAU,aAAa,CAAC,eAAuB,EAAE,QAAiB;IACpF,IAAI,QAAQ,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;QACrD,iBAAiB;QACjB,YAAM,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QACnF,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,eAAe,CAAC,CAAC;KACxD;SAAM,IAAI,QAAQ,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;QAC7C,cAAc;QACd,YAAM,CAAC,MAAM,CAAC,IAAI,CAAC,kCAAkC,eAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7E,MAAM,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;KACjD;SAAM;QACL,qBAAqB;QACrB,YAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0CAA0C,eAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAC7F,MAAM,gBAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;KACzD;IAED,IAAI,MAAM,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,yBAAyB,CAAC,CAAC,EAAE;QAC9E,MAAM,EAAE,CAAC,IAAI,CACX,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,yBAAyB,CAAC,EACrD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAC7C,CAAC;KACH;AACH,CAAC;AArBD,gCAqBC;AAED,SAAS,YAAY,CAAC,QAAgB;IACpC,OAAO,CACL,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,qBAAqB;QAC/C,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,qBAAqB;QAC9C,QAAQ,CAAC,WAAW,EAAE,KAAK,QAAQ,IAAI,iBAAiB;QACxD,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,4CAA4C;QAClG,QAAQ,CAAC,KAAK,CAAC,oEAAoE,CAAC,CAAC,qEAAqE;KAC3J,CAAC;AACJ,CAAC","sourcesContent":["import { Logger } from '@expo/xdl';\nimport chalk from 'chalk';\nimport * as fs from 'fs-extra';\nimport pacote from 'pacote';\nimport * as path from 'path';\n\nconst DEFAULT_TEMPLATE = 'expo-module-template@latest';\n\n/**\n * Fetches directory from npm or given templateDirectory into destinationPath\n * @param destinationPath - destination for fetched template\n * @param template - optional template provided as npm package or local directory\n */\nexport default async function fetchTemplate(destinationPath: string, template?: string) {\n  if (template && fs.existsSync(path.resolve(template))) {\n    // local template\n    Logger.global.info(`Using local template: ${chalk.bold(path.resolve(template))}.`);\n    await fs.copy(path.resolve(template), destinationPath);\n  } else if (template && isNpmPackage(template)) {\n    // npm package\n    Logger.global.info(`Using NPM package as template: ${chalk.bold(template)}`);\n    await pacote.extract(template, destinationPath);\n  } else {\n    // default npm packge\n    Logger.global.info(`Using default NPM package as template: ${chalk.bold(DEFAULT_TEMPLATE)}`);\n    await pacote.extract(DEFAULT_TEMPLATE, destinationPath);\n  }\n\n  if (await fs.pathExists(path.join(destinationPath, 'template-unimodule.json'))) {\n    await fs.move(\n      path.join(destinationPath, 'template-unimodule.json'),\n      path.join(destinationPath, 'unimodule.json')\n    );\n  }\n}\n\nfunction isNpmPackage(template: string) {\n  return (\n    !template.match(/^\\./) && // don't start with .\n    !template.match(/^_/) && // don't start with _\n    template.toLowerCase() === template && // only lowercase\n    !/[~'!()*]/.test(template.split('/').slice(-1)[0]) && // don't contain any character from [~'!()*]\n    template.match(/^(@([^/]+?)\\/)?([^/@]+)(@(((\\d\\.\\d\\.\\d)(-[^/@]+)?)|latest|next))?$/) // has shape (@scope/)?actual-package-name(@0.1.1(-tag.1)?|tag-name)?\n  );\n}\n"]}