{"version":3,"file":"ExpoCLI.js","sourceRoot":"","sources":["../src/ExpoCLI.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAwB;AACxB,sDAA8B;AAC9B,oEAA2C;AAE3C,2CAAuC;AAQhC,KAAK,UAAU,eAAe,CACnC,OAAe,EACf,OAAiB,EAAE,EACnB,UAAmB,EAAE;IAErB,IAAI,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAE1F,kEAAkE;IAClE,iBAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAC/B,iBAAO,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IAEhC,MAAM,qBAAU,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE;QAC1D,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,IAAI,oBAAQ;QAC5C,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,SAAS;QACjC,GAAG,EAAE;YACH,GAAG,iBAAO,CAAC,GAAG;YACd,cAAc,EAAE,MAAM;SACvB;KACF,CAAC,CAAC;AACL,CAAC;AAnBD,0CAmBC","sourcesContent":["import path from 'path';\nimport process from 'process';\nimport spawnAsync from '@expo/spawn-async';\n\nimport { EXPO_DIR } from './Constants';\n\ntype Options = {\n  cwd?: string;\n  root?: string;\n  stdio?: 'inherit' | 'pipe' | 'ignore';\n};\n\nexport async function runExpoCliAsync(\n  command: string,\n  args: string[] = [],\n  options: Options = {}\n): Promise<void> {\n  let configArgs = options.root ? ['--config', path.resolve(options.root, 'app.json')] : [];\n\n  // Don't handle SIGINT/SIGTERM in this process...defer to expo-cli\n  process.on('SIGINT', () => {});\n  process.on('SIGTERM', () => {});\n\n  await spawnAsync('expo', [command, ...args, ...configArgs], {\n    cwd: options.cwd || options.root || EXPO_DIR,\n    stdio: options.stdio || 'inherit',\n    env: {\n      ...process.env,\n      EXPO_NO_DOCTOR: 'true',\n    },\n  });\n}\n"]}