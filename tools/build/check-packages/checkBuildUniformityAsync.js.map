{"version":3,"file":"checkBuildUniformityAsync.js","sourceRoot":"","sources":["../../src/check-packages/checkBuildUniformityAsync.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAGxB,oCAAsC;AACtC,uDAA+B;AAC/B,4CAAwC;AAExC;;;GAGG;AACY,KAAK,UAAU,yBAAyB,CAAC,GAAY;IAClE,MAAM,KAAK,GAAG,MAAM,kBAAU,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS,CAAC,EAAE;QAC1E,KAAK,EAAE,MAAM;QACb,GAAG,EAAE,GAAG,CAAC,IAAI;KACd,CAAC,CAAC;IACH,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEzE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,gBAAM,CAAC,KAAK,CAAC,6DAA6D,CAAC,CAAC;QAC5E,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACjB,MAAM,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,oBAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;YACtE,gBAAM,CAAC,IAAI,CAAC,cAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAI,KAAK,CACb,wBAAwB,GAAG,CAAC,WAAW,0CAA0C,CAClF,CAAC;KACH;AACH,CAAC;AAlBD,4CAkBC","sourcesContent":["import path from 'path';\n\nimport { Package } from '../Packages';\nimport { spawnAsync } from '../Utils';\nimport logger from '../Logger';\nimport { EXPO_DIR } from '../Constants';\n\n/**\n * Checks whether the state of build files is the same after running build script.\n * @param pkg Package to check\n */\nexport default async function checkBuildUniformityAsync(pkg: Package): Promise<void> {\n  const child = await spawnAsync('git', ['status', '--porcelain', './build'], {\n    stdio: 'pipe',\n    cwd: pkg.path,\n  });\n  const lines = child.stdout ? child.stdout.trim().split(/\\r\\n?|\\n/g) : [];\n\n  if (lines.length > 0) {\n    logger.error(`The following build files need to be rebuilt and committed:`);\n    lines.map((line) => {\n      const filePath = path.join(EXPO_DIR, line.replace(/^\\s*\\S+\\s*/g, ''));\n      logger.warn(path.relative(pkg.path, filePath));\n    });\n\n    throw new Error(\n      `The build folder for ${pkg.packageName} has uncommitted changes after building.`\n    );\n  }\n}\n"]}