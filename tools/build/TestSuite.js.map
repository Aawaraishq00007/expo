{"version":3,"file":"TestSuite.js","sourceRoot":"","sources":["../src/TestSuite.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,gEAAuC;AACvC,oEAA2C;AAE3C,2DAA6C;AAC7C,2CAA6B;AAC7B,2CAA6B;AAG7B,MAAM,WAAW,GAAG,iBAAiB,CAAC;AAEtC,MAAM,cAAc,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;AAE/F,KAAK,UAAU,kCAAkC;IAC/C,GAAG,CAAC,SAAS,CAAC,+CAA+C,CAAC,CAAC;IAC/D,6EAA6E;IAC7E,MAAM,qBAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,EAAE;QACpC,GAAG,EAAE,WAAW,CAAC,wBAAwB,EAAE;QAC3C,KAAK,EAAE,SAAS;KACjB,CAAC,CAAC;AACL,CAAC;AAED,KAAK,UAAU,6BAA6B,CAAC,EAAU;IACrD,MAAM,kCAAkC,EAAE,CAAC;IAE3C,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;IACnC,IAAI,WAAW,GAAG,IAAI,mBAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;IACtE,IAAI,OAAO,GAAI,CAAC,MAAM,WAAW,CAAC,SAAS,EAAE,CAA0B,CAAC;IACxE,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACvB,MAAM,WAAW,CAAC,UAAU,CAAC,OAAc,CAAC,CAAC;IAE7C,MAAM,GAAG,CAAC,8BAA8B,CAAC,cAAc,CAAC,CAAC;AAC3D,CAAC;AAEM,KAAK,UAAU,8BAA8B,CAAC,UAAkB;IACrE,IAAI,WAAW,GAAG,IAAI,mBAAQ,CAAC,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;IACtE,MAAM,OAAO,GAAI,CAAC,MAAM,WAAW,CAAC,SAAS,EAAE,CAA0B,CAAC;IAC1E,OAAO,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACrC,MAAM,WAAW,CAAC,UAAU,CAAC,OAAc,CAAC,CAAC;IAE7C,MAAM,EAAE,GAAG,kBAAkB,UAAU,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9D,MAAM,GAAG,GAAG,mBAAmB,WAAW,IAAI,EAAE,EAAE,CAAC;IACnD,MAAM,6BAA6B,CAAC,EAAE,CAAC,CAAC;IAExC,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,EAAE,CAAC,CAAC;AAChD,CAAC;AAXD,wEAWC","sourcesContent":["import path from 'path';\nimport JsonFile from '@expo/json-file';\nimport spawnAsync from '@expo/spawn-async';\n\nimport * as Directories from './Directories';\nimport * as Log from './Log';\nimport * as XDL from './XDL';\nimport AppConfig from './typings/AppConfig';\n\nconst CI_USERNAME = 'exponent_ci_bot';\n\nconst TEST_SUITE_DIR = path.join(Directories.getExpoRepositoryRootDir(), 'apps', 'test-suite');\n\nasync function _installTestSuiteDependenciesAsync(): Promise<void> {\n  Log.collapsed(`Installing test-suite and its dependencies...`);\n  // This will install test-suite, expo, and react-native in the workspace root\n  await spawnAsync('yarn', ['install'], {\n    cwd: Directories.getExpoRepositoryRootDir(),\n    stdio: 'inherit',\n  });\n}\n\nasync function _publishTestSuiteNoCacheAsync(id: string): Promise<void> {\n  await _installTestSuiteDependenciesAsync();\n\n  Log.collapsed('Modifying slug...');\n  let appJsonFile = new JsonFile(path.join(TEST_SUITE_DIR, 'app.json'));\n  let appJson = ((await appJsonFile.readAsync()) as unknown) as AppConfig;\n  appJson.expo.slug = id;\n  await appJsonFile.writeAsync(appJson as any);\n\n  await XDL.publishProjectWithExpoCliAsync(TEST_SUITE_DIR);\n}\n\nexport async function publishVersionedTestSuiteAsync(sdkVersion: string): Promise<void> {\n  let appJsonFile = new JsonFile(path.join(TEST_SUITE_DIR, 'app.json'));\n  const appJson = ((await appJsonFile.readAsync()) as unknown) as AppConfig;\n  appJson.expo.sdkVersion = sdkVersion;\n  await appJsonFile.writeAsync(appJson as any);\n\n  const id = `test-suite-sdk-${sdkVersion}`.replace(/\\./g, '-');\n  const url = `exp://exp.host/@${CI_USERNAME}/${id}`;\n  await _publishTestSuiteNoCacheAsync(id);\n\n  console.log(`Published test-suite to ${url}`);\n}\n"]}