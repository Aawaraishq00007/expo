{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/vendoring/devmenu/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+DAAiD;AACjD,gDAAwB;AACxB,gEAAgC;AAEhC;;;GAGG;AACH,SAAgB,UAAU,CAAC,aAAqB;IAC9C,IAAI,cAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;QAClC,OAAO,aAAa,CAAC;KACtB;IACD,OAAO,cAAI,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,EAAE,aAAa,CAAC,CAAC;AAC1E,CAAC;AALD,gCAKC;AAEM,KAAK,UAAU,SAAS,CAAC,SAAiB,EAAE,WAAmB;IACpE,OAAO,MAAM,sBAAI,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AACvD,CAAC;AAFD,8BAEC","sourcesContent":["import * as Directories from '../../Directories';\nimport path from 'path';\nimport glob from 'glob-promise';\n\n/**\n * @param pathToConvert\n * @returns an absolute path to provided location in the expo repo or provided path if it's an absolute path.\n */\nexport function toRepoPath(pathToConvert: string): string {\n  if (path.isAbsolute(pathToConvert)) {\n    return pathToConvert;\n  }\n  return path.join(Directories.getExpoRepositoryRootDir(), pathToConvert);\n}\n\nexport async function findFiles(directory: string, filePattern: string) {\n  return await glob(path.join(directory, filePattern));\n}\n"]}