{"version":3,"file":"AddChangelog.js","sourceRoot":"","sources":["../../src/commands/AddChangelog.ts"],"names":[],"mappings":"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","sourcesContent":["import { Command } from '@expo/commander';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport inquirer from 'inquirer';\nimport path from 'path';\n\nimport * as Changelogs from '../Changelogs';\nimport * as Directories from '../Directories';\nimport logger from '../Logger';\nimport { formatChangelogEntry } from '../Formatter';\n\ntype ActionOptions = {\n  package: string;\n  // true means that the user didn't use --pull-request or --no-pull-request\n  // unfortunately, we can't change this value\n  pullRequest: number[] | true;\n  author: string[];\n  entry: string;\n  type: string;\n  version: string;\n};\n\nasync function checkOrAskForOptions(options: ActionOptions): Promise<ActionOptions> {\n  const lengthValidator = (x: { length: number }) => x.length !== 0;\n  const stringValidator = {\n    filter: (s: string) => s.trim(),\n    validate: lengthValidator,\n  };\n\n  const questions: inquirer.Question[] = [];\n  if (!options.package) {\n    questions.push({\n      type: 'input',\n      name: 'package',\n      message: 'What is the package that you want to add?',\n      ...stringValidator,\n    });\n  }\n\n  if (options.pullRequest === true) {\n    questions.push({\n      type: 'input',\n      name: 'pullRequest',\n      message: 'What is the pull request number?',\n      filter: (pullRequests) =>\n        pullRequests\n          .split(',')\n          .map((pullrequest) => parseInt(pullrequest, 10))\n          .filter(Boolean),\n      validate: lengthValidator,\n    });\n  }\n\n  if (!options.author.length) {\n    questions.push({\n      type: 'input',\n      name: 'author',\n      message: 'Who is the author?',\n      filter: (authors) =>\n        authors\n          .split(',')\n          .map((author) => author.trim())\n          .filter(Boolean),\n      validate: lengthValidator,\n    });\n  }\n\n  if (!options.entry) {\n    questions.push({\n      type: 'input',\n      name: 'entry',\n      message: 'What is the changelog message?',\n      ...stringValidator,\n    });\n  }\n\n  if (!options.type) {\n    questions.push({\n      type: 'list',\n      name: 'type',\n      message: 'What is the type?',\n      choices: ['bug-fix', 'new-feature', 'breaking-change', 'library-upgrade', 'notice'],\n    });\n  }\n\n  const promptAnswer = questions.length > 0 ? await inquirer.prompt<ActionOptions>(questions) : {};\n\n  return { ...options, ...promptAnswer };\n}\n\nfunction toChangeType(type: string): Changelogs.ChangeType | null {\n  switch (type) {\n    case 'bug-fix':\n      return Changelogs.ChangeType.BUG_FIXES;\n    case 'new-feature':\n      return Changelogs.ChangeType.NEW_FEATURES;\n    case 'breaking-change':\n      return Changelogs.ChangeType.BREAKING_CHANGES;\n    case 'library-upgrade':\n      return Changelogs.ChangeType.LIBRARY_UPGRADES;\n    case 'notice':\n      return Changelogs.ChangeType.NOTICES;\n  }\n  return null;\n}\n\nasync function action(options: ActionOptions) {\n  if (!process.env.CI) {\n    options = await checkOrAskForOptions(options);\n  }\n\n  if (\n    !options.author.length ||\n    !options.entry ||\n    !options.package ||\n    !options.type ||\n    options.pullRequest === true\n  ) {\n    throw new Error(\n      `Must run with --package <string> --entry <string> --author <string> --pull-request <number> --type <string>`\n    );\n  }\n\n  const type = toChangeType(options.type);\n  if (!type) {\n    throw new Error(`Invalid type: ${chalk.cyan(options.type)}`);\n  }\n\n  const packagePath = path.join(Directories.getPackagesDir(), options.package, 'CHANGELOG.md');\n  if (!(await fs.pathExists(packagePath))) {\n    throw new Error(`Package ${chalk.green(options.package)} doesn't have changelog file.`);\n  }\n\n  const changelog = Changelogs.loadFrom(packagePath);\n\n  const message = options.entry.slice(-1) === '.' ? options.entry : `${options.entry}.`;\n  const insertedEntries = await changelog.insertEntriesAsync(options.version, type, null, [\n    {\n      message,\n      pullRequests: options.pullRequest,\n      authors: options.author,\n    },\n  ]);\n\n  if (insertedEntries.length > 0) {\n    logger.info(\n      `\\nâž• Inserted ${chalk.magenta(options.type)} entry to ${chalk.green(options.package)}:`\n    );\n    insertedEntries.forEach((entry) => {\n      logger.log('  ', formatChangelogEntry(Changelogs.getChangeEntryLabel(entry)));\n    });\n\n    logger.info('\\nðŸ’¾ Saving changelog file...');\n\n    await changelog.saveAsync();\n\n    logger.success('\\nâœ… Successfully inserted new entry.');\n  } else {\n    logger.success('\\nâœ… Specified entry is already there.');\n  }\n}\n\nexport default (program: Command) => {\n  program\n    .command('add-changelog')\n    .alias('ac')\n    .description('Adds changelog entry to the package.')\n    .option(\n      '-p, --package <string>',\n      'Package name. For example `expo-image-picker` or `unimodules-file-system-interface.'\n    )\n    .option('-e, --entry <string>', 'Change note to put into the changelog.')\n    .option(\n      '-a, --author <string>',\n      \"GitHub's user name of someone who made this change. Can be passed multiple times.\",\n      (value, previous) => previous.concat(value),\n      []\n    )\n    .option(\n      '-r, --pull-request <number>',\n      'Pull request number. Can be passed multiple times.',\n      (value, previous) => {\n        if (typeof previous === 'boolean') {\n          return [parseInt(value, 10)];\n        }\n\n        return previous.concat(parseInt(value, 10));\n      }\n    )\n    .option(\n      '--no-pull-request',\n      'If changes were pushed directly to the master.',\n      (value, previous) => {\n        // we need to change how no-flag works in commander to be able to pass an array\n        if (!value) {\n          return [];\n        }\n        return previous;\n      }\n    )\n    .option(\n      '-t, --type <string>',\n      'Type of change that determines the section into which the entry should be added. Possible options: bug-fix | new-feature | breaking-change | library-upgrade | notice.'\n    )\n    .option(\n      '-v, --version [string]',\n      'Version in which the change was made.',\n      Changelogs.UNPUBLISHED_VERSION_NAME\n    )\n\n    .asyncAction(action);\n};\n"]}