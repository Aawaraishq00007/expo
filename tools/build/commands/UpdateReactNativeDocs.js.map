{"version":3,"file":"UpdateReactNativeDocs.js","sourceRoot":"","sources":["../../src/commands/UpdateReactNativeDocs.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs-extra';\nimport inquirer from 'inquirer';\nimport path from 'path';\n\nimport { GitDirectory } from '../Git';\nimport logger from '../Logger';\nimport { Directories } from '../expotools';\n\ntype Options = {\n  sdk: string;\n  from: string;\n  to: string;\n};\n\ntype DocsSummary = {\n  removed: string[];\n  added: string[];\n  changed: string[];\n};\n\nconst EXPO_DIR = Directories.getExpoRepositoryRootDir();\nconst DOCS_DIR = path.join(EXPO_DIR, 'docs');\nconst SDK_DOCS_DIR = path.join(DOCS_DIR, 'pages', 'versions');\n\nconst RN_REPO_DIR = path.join(DOCS_DIR, 'react-native-website');\nconst RN_WEBSITE_DIR = path.join(RN_REPO_DIR, 'website');\nconst RN_DOCS_DIR = path.join(RN_REPO_DIR, 'docs');\n\nconst PREFIX_ADDED = 'ADDED_';\nconst PREFIX_REMOVED = 'REMOVED_';\nconst SUFFIX_CHANGED = '.diff';\n\nconst DOCS_IGNORED = [\n  'appregistry',\n  'components-and-apis',\n  'drawerlayoutandroid',\n  'linking',\n  'settings',\n  'systrace',\n];\n\nconst rootRepo = new GitDirectory(path.resolve('.'));\nconst rnRepo = new GitDirectory(RN_REPO_DIR);\nconst rnDocsRepo = new GitDirectory(RN_DOCS_DIR);\n\nasync function action(input: Options) {\n  const options = await getOptions(input);\n\n  if (!(await validateGitStatusAsync())) {\n    return;\n  }\n\n  await updateDocsAsync(options);\n\n  const summary = getDocsSummary(\n    await getLocalFilesAsync(options),\n    await getUpstreamFilesAsync(options)\n  );\n\n  logger.log();\n\n  await applyAddedFilesAsync(options, summary);\n  await applyChangedFilesAsync(options, summary);\n  await applyRemovedFilesAsync(options, summary);\n\n  logCompleted(options);\n}\n\nasync function getOptions(input: Options): Promise<Options> {\n  const questions: inquirer.Question[] = [];\n  const existingSdks = (await fs.promises.readdir(SDK_DOCS_DIR, { withFileTypes: true }))\n    .filter((entry) => entry.isDirectory() && entry.name !== 'latest')\n    .map((entry) => entry.name.replace(/v([0-9]+)/, '$1'));\n\n  if (input.sdk && !existingSdks.includes(input.sdk)) {\n    throw new Error(\n      `SDK docs ${input.sdk} does not exist, please create it with \"et generate-sdk-docs\"`\n    );\n  }\n\n  if (!input.sdk) {\n    questions.push({\n      type: 'list',\n      name: 'sdk',\n      message: 'What Expo SDK version do you want to update?',\n      choices: existingSdks,\n    });\n  }\n\n  if (!input.from) {\n    questions.push({\n      type: 'input',\n      name: 'from',\n      message:\n        'From which commit of the React Native Website do you want to update? (e.g. 9806ddd)',\n      filter: (value: string) => value.trim(),\n      validate: (value: string) => value.length !== 0,\n    });\n  }\n\n  const answers = questions.length > 0 ? await inquirer.prompt(questions) : {};\n\n  return {\n    sdk: `v${answers.sdk || input.sdk}`,\n    from: answers.from || input.from,\n    to: input.to || 'master',\n  };\n}\n\nasync function validateGitStatusAsync() {\n  logger.info('\\n📑 Checking local repository status...');\n\n  const result = await rootRepo.runAsync(['status', '--porcelain']);\n  const status = result.stdout === '' ? 'clean' : 'dirty';\n\n  if (status === 'clean') {\n    return true;\n  }\n\n  logger.warn(`⚠️  Your git working tree is`, chalk.underline('dirty'));\n  logger.info(\n    `It's recommended to ${chalk.bold(\n      'commit all your changes before proceeding'\n    )}, so you can revert the changes made by this command if necessary.`\n  );\n\n  const { useDirtyGit } = await inquirer.prompt({\n    type: 'confirm',\n    name: 'useDirtyGit',\n    message: `Would you like to proceed?`,\n    default: false,\n  });\n\n  logger.log();\n\n  return useDirtyGit;\n}\n\nasync function updateDocsAsync(options: Options) {\n  logger.info(`📚 Updating ${chalk.cyan('react-native-website')} submodule...`);\n\n  await rnRepo.runAsync(['checkout', 'master']);\n  await rnRepo.pullAsync({});\n\n  if (!(await rnRepo.tryAsync(['checkout', options.from]))) {\n    throw new Error(`The --from commit \"${options.from}\" doesn't exists in the submodule.`);\n  }\n\n  if (!(await rnRepo.tryAsync(['checkout', options.to]))) {\n    throw new Error(`The --to commit \"${options.to}\" doesn't exists in the submodule.`);\n  }\n}\n\nasync function getLocalFilesAsync(options: Options) {\n  logger.info('🔎 Resolving local docs from', chalk.underline(options.sdk), 'folder...');\n\n  const versionedDocsPath = path.join(SDK_DOCS_DIR, options.sdk, 'react-native');\n  const files = await fs.promises.readdir(versionedDocsPath);\n\n  return files\n    .filter(\n      entry =>\n        !entry.endsWith(SUFFIX_CHANGED) &&\n        !entry.startsWith(PREFIX_ADDED) &&\n        !entry.startsWith(PREFIX_REMOVED)\n    )\n    .map(entry => entry.replace('.md', ''));\n}\n\nasync function getUpstreamFilesAsync(options: Options) {\n  logger.info(\n    '🔎 Resolving upstream docs from',\n    chalk.underline('react-native-website'),\n    'submodule...'\n  );\n\n  const sidebarPath = path.join(RN_WEBSITE_DIR, 'sidebars.json');\n  const sidebarData = await fs.readJson(sidebarPath);\n\n  let relevantNestedDocs: any[] = [];\n  try {\n    relevantNestedDocs = [\n      ...sidebarData.api.APIs,\n      ...sidebarData.components['Core Components'],\n      ...sidebarData.components.Props,\n    ];\n  } catch (error) {\n    logger.error('\\n🚫 There was an error extracting the sidebar information.');\n    logger.info(\n      'Please double-check the sidebar and update the \"relevantNestedDocs\" in this script.'\n    );\n    logger.info(chalk.dim(`./${path.relative(process.cwd(), sidebarPath)}\\n`));\n    throw error;\n  }\n\n  const upstreamDocs: any[] = [];\n  const relevantDocs: any = relevantNestedDocs.map(entry => {\n    if (typeof entry === 'object' && Array.isArray(entry.ids)) {\n      return entry.ids;\n    }\n\n    if (typeof entry === 'string') {\n      return entry;\n    }\n  });\n\n  for (const entry of relevantDocs.flat()) {\n    const docExists = await fs.pathExists(path.join(RN_DOCS_DIR, `${entry}.md`));\n    const docIsIgnored = DOCS_IGNORED.includes(entry);\n\n    if (docExists && !docIsIgnored) {\n      upstreamDocs.push(entry);\n    }\n  }\n\n  return upstreamDocs;\n}\n\nfunction getDocsSummary(localFiles: string[], upstreamFiles: string[]): DocsSummary {\n  const removed = localFiles.filter(entry => !upstreamFiles.includes(entry));\n  const added = upstreamFiles.filter(entry => !localFiles.includes(entry));\n\n  const changed = upstreamFiles.filter(\n    entry => !(removed.includes(entry) || added.includes(entry))\n  );\n\n  return { removed, added, changed };\n}\n\nasync function applyRemovedFilesAsync(options: Options, summary: DocsSummary) {\n  if (!summary.removed.length) {\n    return logger.info('🤷‍ Upstream did not', chalk.red('remove'), 'any files');\n  }\n\n  for (const entry of summary.removed) {\n    if (entry.startsWith(PREFIX_REMOVED)) {\n      continue;\n    }\n\n    const sdkDocsDir = path.join(SDK_DOCS_DIR, options.sdk, 'react-native');\n\n    await fs.move(\n      path.join(sdkDocsDir, `${entry}.md`),\n      path.join(sdkDocsDir, `${PREFIX_REMOVED}${entry}.md`)\n    );\n  }\n\n  logger.info(\n    '➖ Upstream',\n    chalk.underline(`removed ${summary.removed.length} files`),\n    `see \"${PREFIX_REMOVED}*.md\" files.`\n  );\n}\n\nasync function applyAddedFilesAsync(options: Options, summary: DocsSummary) {\n  if (!summary.added.length) {\n    return logger.info('🤷‍ Upstream did not', chalk.green('add'), 'any files');\n  }\n\n  for (const entry of summary.added) {\n    if (entry.startsWith(PREFIX_ADDED)) {\n      continue;\n    }\n\n    await fs.copyFile(\n      path.join(RN_DOCS_DIR, `${entry}.md`),\n      path.join(SDK_DOCS_DIR, options.sdk, 'react-native', `${PREFIX_ADDED}${entry}.md`)\n    );\n  }\n\n  logger.info(\n    `➕ Upstream ${chalk.underline(\n      `added ${summary.added.length} files`\n    )}, see \"${PREFIX_ADDED}*.md\" files.`\n  );\n}\n\nasync function applyChangedFilesAsync(options: Options, summary: DocsSummary) {\n  if (!summary.changed.length) {\n    return logger.info('🤷‍ Upstream did not', chalk.yellow('change'), 'any files');\n  }\n\n  for (const entry of summary.changed) {\n    const diffPath = path.join(\n      SDK_DOCS_DIR,\n      options.sdk,\n      'react-native',\n      `${entry}${SUFFIX_CHANGED}`\n    );\n\n    const { output: diff } = await rnDocsRepo.runAsync([\n      'format-patch',\n      `${options.from}..HEAD`,\n      '--relative',\n      `${entry}.md`,\n      '--stdout',\n    ]);\n\n    await fs.writeFile(diffPath, diff.join(''));\n  }\n\n  logger.info(\n    '➗ Upstream',\n    chalk.underline(`changed ${summary.changed.length} files`),\n    `see \"*${SUFFIX_CHANGED}\" files.`\n  );\n}\n\nfunction logCompleted(options: Options): void {\n  const versionedDir = path.join(SDK_DOCS_DIR, options.sdk, 'react-native');\n\n  logger.success('\\n✅ Update completed.');\n  logger.info('Please check the files in the versioned react-native folder.');\n  logger.info(\n    'To revert the changes, use `git clean -xdf .` and `git checkout .` in the versioned folder:'\n  );\n  logger.info(chalk.dim(`./${path.relative(process.cwd(), versionedDir)}\\n`));\n}\n\nexport default program => {\n  program\n    .command('update-react-native-docs')\n    .option('--sdk <string>', 'SDK version to merge with (e.g. `unversioned` or `37.0.0`)')\n    .option('--from <commit>', 'React Native Docs commit to start from')\n    .option('--to <commit>', 'React Native Docs commit to end at (defaults to `master`)')\n    .description(\n      `Fetches the React Native Docs changes in the commit range and create diffs to manually merge it.`\n    )\n    .asyncAction(action);\n};\n"]}