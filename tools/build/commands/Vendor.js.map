{"version":3,"file":"Vendor.js","sourceRoot":"","sources":["../../src/commands/Vendor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Command } from '@expo/commander';\nimport os from 'os';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport path from 'path';\nimport {\n  Clone,\n  CopyFiles,\n  Pipe,\n  TransformFilesContent,\n  TransformFilesName,\n  RemoveDirectory,\n  prefixPackage,\n  renameIOSSymbols,\n  renameIOSFiles,\n  Platform,\n  renameClass,\n  Append,\n} from '../vendoring/devmenu';\n\nconst CONFIGURATIONS = {\n  '[dev-menu] reanimated': getReanimatedPipe(),\n  '[dev-menu] gesture-handler': getGestureHandlerPipe(),\n};\n\nfunction getReanimatedPipe() {\n  const destination = 'packages/expo-dev-menu/vendored/react-native-reanimated';\n\n  // prettier-ignore\n  return new Pipe().addSteps(\n    'all',\n      new Clone({\n        url: 'git@github.com:software-mansion/react-native-reanimated.git',\n        tag: '1.13.0',\n      }),\n      new RemoveDirectory({\n        name: 'clean vendored folder',\n        target: destination,\n      }),\n      new CopyFiles({\n        filePattern: ['src/**/*.*', '*.d.ts'],\n        to: destination,\n      }),\n\n    'android',\n      prefixPackage({\n        packageName: 'com.swmansion.reanimated',\n        prefix: 'devmenu',\n      }),\n      renameClass({\n        filePattern: 'android/**/*.@(java|kt)',\n        className: 'UIManagerReanimatedHelper',\n        newClassName: 'DevMenuUIManagerReanimatedHelper'\n      }),\n      new CopyFiles({\n        subDirectory: 'android/src/main/java/com/swmansion',\n        filePattern: '**/*.@(java|kt|xml)',\n        to: path.join(destination, 'android/devmenu/com/swmansion'),\n      }),\n      new CopyFiles({\n        subDirectory: 'android/src/main/java/com/facebook',\n        filePattern: '**/*.@(java|kt|xml)',\n        to: path.join(destination, 'android/com/facebook'),\n      }),\n\n    'ios',\n      new TransformFilesName({\n        filePattern: 'ios/**/*REA*.@(m|h)',\n        find: 'REA',\n        replace: 'DevMenuREA',\n      }),\n      renameIOSSymbols({\n        find: 'REA',\n        replace: 'DevMenuREA',\n      }),\n      new TransformFilesContent({\n        filePattern: 'ios/**/*.@(m|h)',\n        find: 'SimAnimationDragCoefficient',\n        replace: 'DevMenuSimAnimationDragCoefficient',\n      }),\n      new TransformFilesContent({\n        filePattern: 'ios/**/*.@(m|h)',\n        find: '^RCT_EXPORT_MODULE\\\\((.*)\\\\)',\n        replace: '+ (NSString *)moduleName { return @\"$1\"; }',\n      }),\n      new CopyFiles({\n        filePattern: 'ios/**/*.@(m|h)',\n        to: destination,\n      })\n  );\n}\n\nfunction getGestureHandlerPipe() {\n  const destination = 'packages/expo-dev-menu/vendored/react-native-gesture-handler';\n\n  // prettier-ignore\n  return new Pipe().addSteps(\n    'all',\n      new Clone({\n        url: 'git@github.com:software-mansion/react-native-gesture-handler.git',\n        tag: '1.7.0',\n      }),\n      new RemoveDirectory({\n        name: 'clean vendored folder',\n        target: destination,\n      }),\n      new CopyFiles({\n        filePattern: ['*.js', 'touchables/*.js', '*.d.ts'],\n        to: path.join(destination, 'src'),\n      }),\n\n    'android',\n      prefixPackage({\n        packageName: 'com.swmansion.gesturehandler',\n        prefix: 'devmenu',\n      }),\n      renameClass({\n        filePattern: 'android/**/*.@(java|kt)',\n        className: 'RNGHModalUtils',\n        newClassName: 'DevMenuRNGHModalUtils'\n      }),\n      new CopyFiles({\n        subDirectory: 'android/src/main/java/com/swmansion',\n        filePattern: '**/*.@(java|kt|xml)',\n        to: path.join(destination, 'android/devmenu/com/swmansion'),\n      }),\n      new CopyFiles({\n        subDirectory: 'android/lib/src/main/java',\n        filePattern: '**/*.@(java|kt|xml)',\n        to: path.join(destination, 'android/devmenu'),\n      }),\n      new CopyFiles({\n        subDirectory: 'android/src/main/java/com/facebook',\n        filePattern: '**/*.@(java|kt|xml)',\n        to: path.join(destination, 'android/com/facebook'),\n      }),\n\n    'ios',\n      renameIOSFiles({\n        find: 'RN',\n        replace: 'DevMenuRN',\n      }),\n      renameIOSSymbols({\n        find: 'RN',\n        replace: 'DevMenuRN',\n      }),\n      new TransformFilesContent({\n        filePattern: path.join('ios', '**', '*.@(m|h)'),\n        find: '^RCT_EXPORT_MODULE\\\\(DevMenu(.*)\\\\)',\n        replace: '+ (NSString *)moduleName { return @\"$1\"; }',\n      }),\n      new TransformFilesContent({\n        filePattern: 'ios/**/*.@(m|h)',\n        find: '^RCT_EXPORT_MODULE\\\\(\\\\)',\n        replace: '+ (NSString *)moduleName { return @\"RNGestureHandlerModule\"; }',\n      }),\n      new TransformFilesContent({\n        filePattern: 'ios/**/DevMenuRNGestureHandlerModule.m',\n        find: '@interface DevMenuRNGestureHandlerButtonManager([\\\\s\\\\S]*?)@end',\n        replace: ''\n      }),\n      new Append({\n        filePattern: 'ios/**/DevMenuRNGestureHandlerModule.h',\n        append: `@interface DevMenuRNGestureHandlerButtonManager : RCTViewManager\n@end\n`\n      }),\n      new CopyFiles({\n        filePattern: 'ios/**/*.@(m|h)',\n        to: destination,\n      })\n  );\n}\n\nasync function askForConfigurations(): Promise<string[]> {\n  const { configurationNames } = await inquirer.prompt<{ configurationNames: string[] }>([\n    {\n      type: 'checkbox',\n      name: 'configurationNames',\n      message: 'Which configuration would you like to run?',\n      choices: Object.keys(CONFIGURATIONS),\n      default: Object.keys(CONFIGURATIONS),\n    },\n  ]);\n  return configurationNames;\n}\n\ntype ActionOptions = {\n  platform: Platform;\n  configuration: string[];\n};\n\nasync function action({ configuration, platform }: ActionOptions) {\n  if (!configuration.length) {\n    configuration = await askForConfigurations();\n  }\n\n  const pipes = configuration.map((name) => ({ name, pipe: CONFIGURATIONS[name] as Pipe }));\n  const tmpdir = os.tmpdir();\n  for (const { name, pipe } of pipes) {\n    console.log(`Run configuration: ${chalk.green(name)}`);\n    pipe.setWorkingDirectory(path.join(tmpdir, name));\n    await pipe.start(platform);\n    console.log();\n  }\n}\n\nexport default (program: Command) => {\n  program\n    .command('vendor')\n    .alias('v')\n    .description('Vendors 3rd party modules.')\n    .option(\n      '-p, --platform <string>',\n      \"A platform on which the vendored module will be updated. Valid options: 'all' | 'ios' | 'android'.\",\n      'all'\n    )\n    .option(\n      '-c, --configuration [string]',\n      'Vendor configuration which should be run. Can be passed multiple times.',\n      (value, previous) => previous.concat(value),\n      []\n    )\n\n    .asyncAction(action);\n};\n"]}