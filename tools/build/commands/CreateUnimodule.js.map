{"version":3,"file":"CreateUnimodule.js","sourceRoot":"","sources":["../../src/commands/CreateUnimodule.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA,gEAAuC;AACvC,kDAA0B;AAC1B,2CAA6B;AAE7B,4CAAsD;AACtD,iGAAyE;AACzE,oCAAsC;AAQtC,KAAK,UAAU,sBAAsB,CAAC,kBAAkB;IACtD,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;IACtE,MAAM,WAAW,GAAG,IAAI,mBAAQ,CAAC,eAAe,CAAC,CAAC;IAClD,MAAM,oBAAoB,GAAG,CAAC,MAAM,mBAAQ,CAAC,QAAQ,CACnD,IAAI,CAAC,IAAI,CAAC,wBAAY,EAAE,qBAAqB,EAAE,cAAc,CAAC,EAC9D,SAAS,EACT,EAAE,CACH,CAAW,CAAC;IAEb,OAAO,CAAC,GAAG,CAAC,cAAc,eAAK,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAExE,MAAM,kBAAU,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,wBAAwB,oBAAoB,EAAE,CAAC,EAAE;QACzF,GAAG,EAAE,kBAAkB;KACxB,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,cAAc,eAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,oBAAQ,EAAE,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC;IAExF,MAAM,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE;QACpC,KAAK,EAAE,mBAAmB;QAC1B,KAAK,EAAE,mBAAmB;QAC1B,IAAI,EAAE,kBAAkB;QACxB,IAAI,EAAE,kBAAkB;QACxB,OAAO,EAAE,qBAAqB;QAC9B,cAAc,EAAE,4BAA4B;QAC5C,aAAa,EAAE,aAAa;KAC7B,CAAC,CAAC;IAEH,MAAM,WAAW,CAAC,QAAQ,CAAC,YAAY,EAAE;QACvC,IAAI,EAAE,KAAK;QACX,GAAG,EAAE,kCAAkC;QACvC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,oBAAQ,EAAE,kBAAkB,CAAC;KACvD,CAAC,CAAC;IAEH,MAAM,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE;QACjC,GAAG,EAAE,qCAAqC;KAC3C,CAAC,CAAC;IAEH,MAAM,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE;QACjC,MAAM,EAAE,yBAAyB;KAClC,CAAC,CAAC;IAEH,+DAA+D;IAC/D,8IAA8I;IAC9I,MAAM,WAAW,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;AACrF,CAAC;AAED,KAAK,UAAU,MAAM,CAAC,OAAsB;IAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;KACxE;IAED,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAY,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;IAEjE,MAAM,6BAAmB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IAEvD,MAAM,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;AACnD,CAAC;AAED,kBAAe,CAAC,OAAgB,EAAE,EAAE;IAClC,OAAO;SACJ,OAAO,CAAC,kBAAkB,CAAC;SAC3B,KAAK,CAAC,IAAI,CAAC;SACX,WAAW,CAAC,sDAAsD,CAAC;SACnE,MAAM,CAAC,qBAAqB,EAAE,gCAAgC,EAAE,IAAI,CAAC;SACrE,MAAM,CACL,sBAAsB,EACtB,iHAAiH,CAClH;SACA,MAAM,CACL,yBAAyB,EACzB,kEAAkE,CACnE;SACA,WAAW,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC,CAAC","sourcesContent":["import { Command } from '@expo/commander';\nimport JsonFile from '@expo/json-file';\nimport chalk from 'chalk';\nimport * as path from 'path';\n\nimport { PACKAGES_DIR, EXPO_DIR } from '../Constants';\nimport generateModuleAsync from '../generate-module/generateModuleAsync';\nimport { spawnAsync } from '../Utils';\n\ntype ActionOptions = {\n  name: string;\n  template?: string;\n  useLocalTemplate?: boolean;\n};\n\nasync function setupExpoModuleScripts(unimoduleDirectory) {\n  const packageJsonPath = path.join(unimoduleDirectory, 'package.json');\n  const packageJson = new JsonFile(packageJsonPath);\n  const moduleScriptsVersion = (await JsonFile.getAsync(\n    path.join(PACKAGES_DIR, 'expo-module-scripts', 'package.json'),\n    'version',\n    ''\n  )) as string;\n\n  console.log(`Installing ${chalk.bold.green('expo-module-scripts')}...`);\n\n  await spawnAsync('yarn', ['add', '--dev', `expo-module-scripts@^${moduleScriptsVersion}`], {\n    cwd: unimoduleDirectory,\n  });\n\n  console.log(`Setting up ${chalk.magenta(path.relative(EXPO_DIR, packageJsonPath))}...`);\n\n  await packageJson.setAsync('scripts', {\n    build: 'expo-module build',\n    clean: 'expo-module clean',\n    lint: 'expo-module lint',\n    test: 'expo-module test',\n    prepare: 'expo-module prepare',\n    prepublishOnly: 'expo-module prepublishOnly',\n    'expo-module': 'expo-module',\n  });\n\n  await packageJson.setAsync('repository', {\n    type: 'git',\n    url: 'https://github.com/expo/expo.git',\n    directory: path.relative(EXPO_DIR, unimoduleDirectory),\n  });\n\n  await packageJson.setAsync('bugs', {\n    url: 'https://github.com/expo/expo/issues',\n  });\n\n  await packageJson.setAsync('jest', {\n    preset: 'expo-module-scripts/ios',\n  });\n\n  // `expo generate-module` left some junk fields in package.json\n  // TODO(@tsapeta): Probably these keys should be deleted by CLI, but I'd like to do this separately since it needs some other changes as well.\n  await packageJson.deleteKeysAsync(['gitHead', '_resolved', '_integrity', '_from']);\n}\n\nasync function action(options: ActionOptions) {\n  if (!options.name) {\n    throw new Error('Missing unimodule name. Run with `--name <string>`.');\n  }\n\n  const unimoduleDirectory = path.join(PACKAGES_DIR, options.name);\n\n  await generateModuleAsync(unimoduleDirectory, options);\n\n  await setupExpoModuleScripts(unimoduleDirectory);\n}\n\nexport default (program: Command) => {\n  program\n    .command('create-unimodule')\n    .alias('cu')\n    .description('Creates a new unimodule under the `packages` folder.')\n    .option('-n, --name <string>', 'Name of the package to create.', null)\n    .option(\n      '--use-local-template',\n      'Uses local `packages/expo-module-template` instead of the one published to NPM. Ignored when -t option is used.'\n    )\n    .option(\n      '-t, --template <string>',\n      'Local directory or npm package containing template for unimodule'\n    )\n    .asyncAction(action);\n};\n"]}