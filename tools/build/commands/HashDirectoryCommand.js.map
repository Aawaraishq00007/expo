{"version":3,"file":"HashDirectoryCommand.js","sourceRoot":"","sources":["../../src/commands/HashDirectoryCommand.ts"],"names":[],"mappings":";;AAAA,4CAA6C;AAE7C,KAAK,UAAU,MAAM,CAAC,OAAO;IAC3B,IAAI,IAAI,CAAC;IACT,IAAI,OAAO,CAAC,YAAY,EAAE;QACxB,IAAI,GAAG,MAAM,yBAAa,CAAC,8BAA8B,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;KAC1E;SAAM;QACL,IAAI,GAAG,MAAM,yBAAa,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;KAC9D;IACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC;AAED,kBAAe,CAAC,OAAY,EAAE,EAAE;IAC9B,OAAO;SACJ,OAAO,CAAC,gBAAgB,CAAC;SACzB,MAAM,CACL,iBAAiB,EACjB,wEAAwE,CACzE;SACA,WAAW,CAAC,yCAAyC,CAAC;SACtD,WAAW,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC,CAAC","sourcesContent":["import { HashDirectory } from '../expotools';\n\nasync function action(options) {\n  let hash;\n  if (options.withVersions) {\n    hash = await HashDirectory.hashDirectoryWithVersionsAsync(process.cwd());\n  } else {\n    hash = await HashDirectory.hashDirectoryAsync(process.cwd());\n  }\n  console.log(hash);\n}\n\nexport default (program: any) => {\n  program\n    .command('hash-directory')\n    .option(\n      '--with-versions',\n      'Hash the directory and include versions of Yarn and Node in the input.'\n    )\n    .description('Returns a hash of the current directory')\n    .asyncAction(action);\n};\n"]}