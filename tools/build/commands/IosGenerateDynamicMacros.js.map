{"version":3,"file":"IosGenerateDynamicMacros.js","sourceRoot":"","sources":["../../src/commands/IosGenerateDynamicMacros.ts"],"names":[],"mappings":";;;;;AACA,gDAAwB;AAExB,mFAAqF;AACrF,4CAA2C;AAE3C,MAAM,QAAQ,GAAG,uBAAW,CAAC,wBAAwB,EAAE,CAAC;AACxD,MAAM,OAAO,GAAG,uBAAW,CAAC,SAAS,EAAE,CAAC;AACxC,MAAM,cAAc,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;AACpE,MAAM,kBAAkB,GAAG,cAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;AAEjE,KAAK,UAAU,cAAc,CAAC,OAAO;IACnC,MAAM,kBAAkB,GACtB,OAAO,CAAC,kBAAkB,IAAI,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,wBAAwB,CAAC,CAAC;IACpF,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IACvF,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;IAEzE,MAAM,kDAA0B,CAAC;QAC/B,kBAAkB;QAClB,QAAQ,EAAE,KAAK;QACf,aAAa;QACb,WAAW,EAAE,QAAQ;QACrB,iBAAiB,EAAE,kBAAkB;QACrC,aAAa;QACb,aAAa,EAAE,OAAO,CAAC,YAAY;KACpC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,OAAO,CAAC,GAAG,EAAE,IAAI;IACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,OAAO,IAAI,CAAC;AACd,CAAC;AAED,kBAAe,CAAC,OAAgB,EAAE,EAAE;IAClC,OAAO;SACJ,OAAO,CAAC,6BAA6B,CAAC;SACtC,MAAM,CACL,+BAA+B,EAC/B,oEAAoE,CACrE;SACA,MAAM,CACL,0BAA0B,EAC1B,8DAA8D,CAC/D;SACA,MAAM,CACL,0BAA0B,EAC1B,+DAA+D,CAChE;SACA,MAAM,CACL,0BAA0B,EAC1B,qEAAqE,EACrE,OAAO,EACP,EAAE,CACH;SACA,WAAW,CAAC,0CAA0C,CAAC;SACvD,WAAW,CAAC,cAAc,CAAC,CAAC;AACjC,CAAC,CAAC","sourcesContent":["import { Command } from '@expo/commander';\nimport path from 'path';\n\nimport { generateDynamicMacrosAsync } from '../dynamic-macros/generateDynamicMacros';\nimport { Directories } from '../expotools';\n\nconst EXPO_DIR = Directories.getExpoRepositoryRootDir();\nconst IOS_DIR = Directories.getIosDir();\nconst SUPPORTING_DIR = path.join(IOS_DIR, 'Exponent', 'Supporting');\nconst TEMPLATE_FILES_DIR = path.join(EXPO_DIR, 'template-files');\n\nasync function generateAction(options): Promise<void> {\n  const buildConstantsPath =\n    options.buildConstantsPath || path.join(SUPPORTING_DIR, 'EXBuildConstants.plist');\n  const infoPlistPath = options.infoPlistPath || path.join(SUPPORTING_DIR, 'Info.plist');\n  const configuration = options.configuration || process.env.CONFIGURATION;\n\n  await generateDynamicMacrosAsync({\n    buildConstantsPath,\n    platform: 'ios',\n    infoPlistPath,\n    expoKitPath: EXPO_DIR,\n    templateFilesPath: TEMPLATE_FILES_DIR,\n    configuration,\n    skipTemplates: options.skipTemplate,\n  });\n}\n\nfunction collect(val, memo) {\n  memo.push(val);\n  return memo;\n}\n\nexport default (program: Command) => {\n  program\n    .command('ios-generate-dynamic-macros')\n    .option(\n      '--buildConstantsPath [string]',\n      'Path to EXBuildConstants.plist relative to `ios` folder. Optional.'\n    )\n    .option(\n      '--infoPlistPath [string]',\n      \"Path to app's Info.plist relative to `ios` folder. Optional.\"\n    )\n    .option(\n      '--configuration [string]',\n      'Build configuration. Defaults to `process.env.CONFIGURATION`.'\n    )\n    .option(\n      '--skip-template [string]',\n      'Skip generating a template (ie) GoogleService-Info.plist. Optional.',\n      collect,\n      []\n    )\n    .description('Generates dynamic macros for iOS client.')\n    .asyncAction(generateAction);\n};\n"]}