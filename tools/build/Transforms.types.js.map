{"version":3,"file":"Transforms.types.js","sourceRoot":"","sources":["../src/Transforms.types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Basic string transform that describes what should be replaced in the input string.\n */\nexport type StringTransform = {\n  /**\n   * A substring or RegExp matching a part of the input that you want to replace.\n   */\n  find: RegExp | string;\n\n  /**\n   * A string that replaces matched substrings in the input.\n   */\n  replaceWith: string | ((substring: string, ...args: any[]) => string);\n};\n\n/**\n * A string transform extended by paths glob filter.\n */\nexport type FileTransform = StringTransform & {\n  /**\n   * An array of glob patterns matching files to which the transform should be applied.\n   * Patterns without slashes will be matched against the basename of the path.\n   */\n  paths?: string | string[];\n};\n\n/**\n * An object containing both file content transforms and path transforms.\n */\nexport type FileTransforms = {\n  /**\n   * An array of transforms to apply on each file's content.\n   */\n  content?: FileTransform[];\n\n  /**\n   * An array of transforms to apply on the relative file path.\n   */\n  path?: StringTransform[];\n};\n\n/**\n * An object with options passed to `copyFilesWithTransformsAsync` function.\n */\nexport type CopyFileOptions = {\n  /**\n   * Path of the file to copy, relative to `sourceDirectory`.\n   */\n  sourceFile: string;\n\n  /**\n   * A directory from which the files will be copied.\n   */\n  sourceDirectory: string;\n\n  /**\n   * A directory to which the transformed files will be copied.\n   */\n  targetDirectory: string;\n\n  /**\n   * An object with transform rules for file paths and contents.\n   */\n  transforms: FileTransforms;\n};\n\n/**\n * The result of copying the file.\n */\nexport type CopyFileResult = {\n  /**\n   * The final file content after transformations.\n   */\n  content: string;\n\n  /**\n   * The final target path after transformations. Relative to provided `targetDirectory`.\n   */\n  targetFile: string;\n};\n"]}