{"version":3,"file":"prepareParcels.js","sourceRoot":"","sources":["../../../src/promote-packages/tasks/prepareParcels.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAkC;AAClC,6CAAwD;AACxD,mDAAyC;AAEzC,wCAA+C;AAE/C;;;GAGG;AACU,QAAA,cAAc,GAAG,IAAI,kBAAI,CACpC;IACE,IAAI,EAAE,gBAAgB;CACvB,EACD,KAAK,EAAE,OAAiB,EAAE,OAAuB,EAAE,EAAE;IACnD,gBAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;IAEnD,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;IAC1C,MAAM,WAAW,GAAG,MAAM,iCAAsB,EAAE,CAAC;IACnD,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;QAClD,MAAM,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC;QAC1C,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACvF,MAAM,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAErD,OAAO,CAAC,SAAS,IAAI,UAAU,IAAI,CAAC,UAAU,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,2BAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CACF,CAAC","sourcesContent":["import logger from '../../Logger';\nimport { getListOfPackagesAsync } from '../../Packages';\nimport { Task } from '../../TasksRunner';\nimport { CommandOptions, Parcel, TaskArgs } from '../types';\nimport { createParcelAsync } from '../helpers';\n\n/**\n * Gets a list of public packages in the monorepo, downloads `npm view` result of them,\n * creates their Changelog instance and fills in given parcels array (it's empty at the beginning).\n */\nexport const prepareParcels = new Task<TaskArgs>(\n  {\n    name: 'prepareParcels',\n  },\n  async (parcels: Parcel[], options: CommandOptions) => {\n    logger.info('ðŸ”Ž Gathering data about packages...');\n\n    const { exclude, packageNames } = options;\n    const allPackages = await getListOfPackagesAsync();\n    const filteredPackages = allPackages.filter((pkg) => {\n      const isPrivate = pkg.packageJson.private;\n      const isIncluded = packageNames.length === 0 || packageNames.includes(pkg.packageName);\n      const isExcluded = exclude.includes(pkg.packageName);\n\n      return !isPrivate && isIncluded && !isExcluded;\n    });\n\n    parcels.push(...(await Promise.all(filteredPackages.map(createParcelAsync))));\n  }\n);\n"]}