{"version":3,"file":"promotePackages.js","sourceRoot":"","sources":["../../../src/promote-packages/tasks/promotePackages.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA0B;AAE1B,0DAAkC;AAClC,+CAAiC;AACjC,mDAAyC;AACzC,wCAAiD;AAEjD,mEAAgE;AAChE,qDAAkD;AAClD,uEAAoE;AAEpE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,eAAK,CAAC;AAE3C;;GAEG;AACU,QAAA,eAAe,GAAG,IAAI,kBAAI,CACrC;IACE,IAAI,EAAE,iBAAiB;IACvB,SAAS,EAAE,CAAC,+BAAc,EAAE,6CAAqB,EAAE,iDAAuB,CAAC;CAC5E,EACD,KAAK,EAAE,OAAiB,EAAE,OAAuB,EAAiB,EAAE;IAClE,gBAAM,CAAC,IAAI,CAAC,8BAA8B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAE7E,MAAM,OAAO,CAAC,GAAG,CACf,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;QACnC,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;QAC1C,MAAM,EAAE,gBAAgB,EAAE,GAAG,KAAK,CAAC;QAEnC,MAAM,KAAK,GAAG,gBAAM,CAAC,KAAK,EAAE,CAAC;QAC7B,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACvE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QAC7C,KAAK,CAAC,GAAG,CACP,MAAM,EACN,MAAM,EACN,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EACnB,6BAAmB,CAAC,gBAAgB,EAAE,cAAc,CAAC,CACtD,CAAC;QAEF,wCAAwC;QACxC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YAChB,MAAM,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;SACzE;QAED,wEAAwE;QACxE,IAAI,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC3E,KAAK,MAAM,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE;gBACpC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,MAAM,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAElF,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;oBAChB,MAAM,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;iBACpD;aACF;SACF;QACD,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC,CAAC,CACH,CAAC;IAEF,gBAAM,CAAC,OAAO,CAAC,6BAA6B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC;AACrF,CAAC,CACF,CAAC","sourcesContent":["import chalk from 'chalk';\n\nimport logger from '../../Logger';\nimport * as Npm from '../../Npm';\nimport { Task } from '../../TasksRunner';\nimport { formatVersionChange } from '../helpers';\nimport { CommandOptions, Parcel, TaskArgs } from '../types';\nimport { findPackagesToPromote } from './findPackagesToPromote';\nimport { prepareParcels } from './prepareParcels';\nimport { selectPackagesToPromote } from './selectPackagesToPromote';\n\nconst { yellow, red, green, cyan } = chalk;\n\n/**\n * Promotes local versions of selected packages to npm tag passed as an option.\n */\nexport const promotePackages = new Task<TaskArgs>(\n  {\n    name: 'promotePackages',\n    dependsOn: [prepareParcels, findPackagesToPromote, selectPackagesToPromote],\n  },\n  async (parcels: Parcel[], options: CommandOptions): Promise<void> => {\n    logger.info(`\\nðŸš€ Promoting packages to ${yellow.bold(options.tag)} tag...`);\n\n    await Promise.all(\n      parcels.map(async ({ pkg, state }) => {\n        const currentVersion = pkg.packageVersion;\n        const { versionToReplace } = state;\n\n        const batch = logger.batch();\n        const action = state.isDemoting ? red('Demoting') : green('Promoting');\n        batch.log('  ', green.bold(pkg.packageName));\n        batch.log(\n          '    ',\n          action,\n          yellow(options.tag),\n          formatVersionChange(versionToReplace, currentVersion)\n        );\n\n        // Tag the local version of the package.\n        if (!options.dry) {\n          await Npm.addTagAsync(pkg.packageName, pkg.packageVersion, options.tag);\n        }\n\n        // If the local version had any tags assigned, we can drop the old ones.\n        if (options.drop && state.distTags && !state.distTags.includes(options.tag)) {\n          for (const distTag of state.distTags) {\n            batch.log('    ', `Dropping ${yellow(distTag)} tag (${cyan(currentVersion)})...`);\n\n            if (!options.dry) {\n              await Npm.removeTagAsync(pkg.packageName, distTag);\n            }\n          }\n        }\n        batch.flush();\n      })\n    );\n\n    logger.success(`\\nâœ… Successfully promoted ${cyan(parcels.length + '')} packages.`);\n  }\n);\n"]}