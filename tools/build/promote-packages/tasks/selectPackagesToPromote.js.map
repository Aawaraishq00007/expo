{"version":3,"file":"selectPackagesToPromote.js","sourceRoot":"","sources":["../../../src/promote-packages/tasks/selectPackagesToPromote.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport readline from 'readline';\nimport stripAnsi from 'strip-ansi';\n\nimport logger from '../../Logger';\nimport { Task } from '../../TasksRunner';\nimport { formatVersionChange } from '../helpers';\nimport { CommandOptions, Parcel, TaskArgs } from '../types';\nimport { findPackagesToPromote } from './findPackagesToPromote';\n\nconst { green, red } = chalk;\n\n/**\n * Prompts the user to select packages to promote or demote.\n * It's skipped if `--no-select` option is used or it's run on the CI.\n */\nexport const selectPackagesToPromote = new Task<TaskArgs>(\n  {\n    name: 'selectPackagesToPromote',\n    dependsOn: [findPackagesToPromote],\n  },\n  async (parcels: Parcel[], options: CommandOptions): Promise<void | TaskArgs> => {\n    if (!options.select || process.env.CI) {\n      return [parcels, options];\n    }\n\n    logger.info('\\nðŸ‘‰ Selecting packages to promote...\\n');\n\n    const packageNames = await promptForPackagesToPromoteAsync(parcels);\n    const newParcels = parcels.filter(({ pkg }) => packageNames.includes(pkg.packageName));\n\n    return [newParcels, options];\n  }\n);\n\n/**\n * Prompts the user to select packages to promote or demote.\n */\nasync function promptForPackagesToPromoteAsync(parcels: Parcel[]): Promise<string[]> {\n  const maxLength = parcels.reduce((acc, { pkg }) => Math.max(acc, pkg.packageName.length), 0);\n  const choices = parcels.map(({ pkg, state }) => {\n    const action = state.isDemoting ? red.bold('demote') : green.bold('promote');\n\n    return {\n      name: `${green(pkg.packageName.padEnd(maxLength))} ${action} ${formatVersionChange(\n        state.versionToReplace,\n        pkg.packageVersion\n      )}`,\n      value: pkg.packageName,\n      checked: !state.isDemoting,\n    };\n  });\n  const { selectedPackageNames } = await inquirer.prompt([\n    {\n      type: 'checkbox',\n      name: 'selectedPackageNames',\n      message: 'Which packages do you want to promote?\\n',\n      choices: [\n        // Choices unchecked by default (these being demoted) should be on top.\n        // We could sort them, but JS sorting algorithm is unstable :/\n        ...choices.filter((choice) => !choice.checked),\n        ...choices.filter((choice) => choice.checked),\n      ],\n      pageSize: Math.max(15, (process.stdout.rows ?? 15) - 15),\n    },\n  ]);\n  // Inquirer shows all those selected choices by name and that looks so ugly due to line wrapping.\n  // If possible, we clear everything that has been printed after the prompt.\n  if (process.stdout.columns) {\n    const bufferLength = choices.reduce(\n      (acc, choice) => acc + stripAnsi(choice.name).length + 2,\n      0\n    );\n    readline.moveCursor(process.stdout, 0, -Math.ceil(bufferLength / process.stdout.columns));\n    readline.clearScreenDown(process.stdout);\n  }\n  return selectedPackageNames;\n}\n"]}