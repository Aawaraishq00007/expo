{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/promote-packages/helpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA0B;AAG1B,0DAA4C;AAC5C,gCAAsC;AACtC,uDAA+B;AAG/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,eAAK,CAAC;AAElD;;GAEG;AACI,KAAK,UAAU,iBAAiB,CAAC,GAAY;IAClD,OAAO;QACL,GAAG;QACH,OAAO,EAAE,MAAM,GAAG,CAAC,mBAAmB,EAAE;QACxC,SAAS,EAAE,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC;QACjD,MAAM,EAAE,IAAI,kBAAY,CAAC,GAAG,CAAC,IAAI,CAAC;QAClC,KAAK,EAAE,EAAE;KACV,CAAC;AACJ,CAAC;AARD,8CAQC;AAED;;GAEG;AACH,SAAgB,mBAAmB,CACjC,WAAsC,EACtC,SAAiB;IAEjB,MAAM,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,OAAO,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AACjC,CAAC;AAPD,kDAOC;AAED;;GAEG;AACH,SAAgB,sBAAsB,CAAC,OAAiB;IACtD,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACnE,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAEjE,8BAA8B,CAC5B,SAAS,EACT,+BAA+B,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CACzD,CAAC;IACF,8BAA8B,CAC5B,QAAQ,EACR,+BAA+B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAC1F,CAAC;AACJ,CAAC;AAZD,wDAYC;AAED,SAAS,8BAA8B,CAAC,OAAiB,EAAE,UAAkB;IAC3E,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACtB,gBAAM,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAEtC,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,EAAE;YACpC,gBAAM,CAAC,GAAG,CACR,MAAM,EACN,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,EACtB,mBAAmB,CAAC,KAAK,CAAC,gBAAgB,EAAE,GAAG,CAAC,cAAc,CAAC,CAChE,CAAC;SACH;KACF;AACH,CAAC","sourcesContent":["import chalk from 'chalk';\n\nimport { Parcel } from './types';\nimport * as Changelogs from '../Changelogs';\nimport { GitDirectory } from '../Git';\nimport logger from '../Logger';\nimport { Package } from '../Packages';\n\nconst { cyan, green, magenta, red, gray } = chalk;\n\n/**\n * Wraps `Package` object into a parcels - convenient wrapper providing more package-related helpers.\n */\nexport async function createParcelAsync(pkg: Package): Promise<Parcel> {\n  return {\n    pkg,\n    pkgView: await pkg.getPackageViewAsync(),\n    changelog: Changelogs.loadFrom(pkg.changelogPath),\n    gitDir: new GitDirectory(pkg.path),\n    state: {},\n  };\n}\n\n/**\n * Formats version change from version A to version B.\n */\nexport function formatVersionChange(\n  fromVersion: string | null | undefined,\n  toVersion: string\n): string {\n  const from = fromVersion ? cyan.bold(fromVersion) : gray.bold('none');\n  const to = cyan.bold(toVersion);\n  return `from ${from} to ${to}`;\n}\n\n/**\n * Prints a lists of packages to promote or demote.\n */\nexport function printPackagesToPromote(parcels: Parcel[]): void {\n  const toPromote = parcels.filter(({ state }) => !state.isDemoting);\n  const toDemote = parcels.filter(({ state }) => state.isDemoting);\n\n  printPackagesToPromoteInternal(\n    toPromote,\n    `Following packages would be ${green.bold('promoted')}:`\n  );\n  printPackagesToPromoteInternal(\n    toDemote,\n    `Following packages could be ${red.bold('demoted')} ${gray(`(requires --demote flag)`)}:`\n  );\n}\n\nfunction printPackagesToPromoteInternal(parcels: Parcel[], headerText: string): void {\n  if (parcels.length > 0) {\n    logger.log('  ', magenta(headerText));\n\n    for (const { pkg, state } of parcels) {\n      logger.log(\n        '    ',\n        green(pkg.packageName),\n        formatVersionChange(state.versionToReplace, pkg.packageVersion)\n      );\n    }\n  }\n}\n"]}