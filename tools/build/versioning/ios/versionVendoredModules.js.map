{"version":3,"file":"versionVendoredModules.js","sourceRoot":"","sources":["../../../src/versioning/ios/versionVendoredModules.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport { IOS_DIR } from '../../Constants';\nimport logger from '../../Logger';\nimport { copyFileWithTransformsAsync } from '../../Transforms';\nimport { FileTransforms } from '../../Transforms.types';\nimport { searchFilesAsync } from '../../Utils';\nimport vendoredModulesTransforms from './transforms/vendoredModulesTransforms';\n\nconst IOS_VENDORED_DIR = path.join(IOS_DIR, 'vendored');\n\n/**\n * Versions iOS vendored modules.\n */\nexport async function versionVendoredModulesAsync(\n  sdkNumber: number,\n  filterModules: string[] | null\n): Promise<void> {\n  const prefix = `ABI${sdkNumber}_0_0`;\n  const config = vendoredModulesTransforms(prefix);\n  const baseTransforms = baseTransformsFactory(prefix);\n  const unversionedDir = path.join(IOS_VENDORED_DIR, 'unversioned');\n  const versionedDir = path.join(IOS_VENDORED_DIR, `sdk${sdkNumber}`);\n  const sourceDirents = (await fs.readdir(unversionedDir, { withFileTypes: true })).filter(\n    (dirent) => {\n      return dirent.isDirectory() && (!filterModules || filterModules.includes(dirent.name));\n    }\n  );\n\n  for (const { name } of sourceDirents) {\n    logger.info('ðŸ”ƒ Versioning vendored module %s', chalk.green(name));\n\n    const moduleConfig = config[name];\n    const sourceDirectory = path.join(unversionedDir, name);\n    const targetDirectory = path.join(versionedDir, name);\n    const files = await searchFilesAsync(sourceDirectory, '**');\n\n    await fs.remove(targetDirectory);\n\n    for (const sourceFile of files) {\n      await copyFileWithTransformsAsync({\n        sourceFile,\n        sourceDirectory,\n        targetDirectory,\n        transforms: {\n          path: [...baseTransforms.path, ...(moduleConfig?.path ?? [])],\n          content: [...baseTransforms.content, ...(moduleConfig?.content ?? [])],\n        },\n      });\n    }\n  }\n}\n\n/**\n * Generates base transforms to apply for all vendored modules.\n */\nfunction baseTransformsFactory(prefix: string): Required<FileTransforms> {\n  return {\n    path: [\n      {\n        find: /([^/]+\\.podspec\\.json)$\\b/,\n        replaceWith: `${prefix}$1`,\n      },\n      {\n        find: /\\b(RNC[^/]*\\.)(h|m|mm)/,\n        replaceWith: `${prefix}$1$2`,\n      },\n    ],\n    content: [\n      {\n        paths: '*.podspec.json',\n        find: /\"name\": \"([\\w-]+)\"/,\n        replaceWith: `\"name\": \"${prefix}$1\"`,\n      },\n      {\n        find: /\\b(React)/g,\n        replaceWith: `${prefix}$1`,\n      },\n      {\n        find: /\\b(RCT|RNC)(\\w+)\\b/g,\n        replaceWith: `${prefix}$1$2`,\n      },\n      {\n        paths: '*.swift',\n        find: /@objc\\(([^)]+)\\)/g,\n        replaceWith: `@objc(${prefix}$1)`,\n      },\n    ],\n  };\n}\n"]}