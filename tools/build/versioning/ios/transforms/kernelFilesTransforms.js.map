{"version":3,"file":"kernelFilesTransforms.js","sourceRoot":"","sources":["../../../../src/versioning/ios/transforms/kernelFilesTransforms.ts"],"names":[],"mappings":";;;AAEA;;;;;;;;GAQG;AACH,SAAgB,qBAAqB,CACnC,WAAmB,EACnB,WAAoB,KAAK;IAEzB,OAAO;QACL,UAAU,EAAE;YACV;gBACE,KAAK,EAAE,CAAC,uBAAuB,CAAC;gBAChC,GAAG,YAAY,CAAC,QAAQ,EAAE;oBACxB,OAAO,EAAE,wCAAwC;oBACjD,IAAI,EAAE,wBAAwB,WAAW,SAAS,WAAW,+BAA+B,WAAW,SAAS,WAAW,0BAA0B;iBACtJ,CAAC;aACH;YACD;gBACE,KAAK,EAAE,CAAC,uBAAuB,CAAC;gBAChC,GAAG,YAAY,CAAC,QAAQ,EAAE;oBACxB,OAAO,EAAE,iEAAiE;oBAC1E,IAAI,EAAE,wBAAwB,WAAW,SAAS,WAAW,wBAAwB,WAAW,gEAAgE;iBACjK,CAAC;aACH;SACF;KACF,CAAC;AACJ,CAAC;AAtBD,sDAsBC;AAOD;;;;;;GAMG;AACH,SAAS,YAAY,CACnB,QAAiB,EACjB,WAAwB,EACxB,mBAAiC;IAEjC,OAAO,QAAQ,CAAC,CAAC,CAAC,mBAAmB,aAAnB,mBAAmB,cAAnB,mBAAmB,GAAI,EAAE,OAAO,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;AACjG,CAAC","sourcesContent":["import { TransformPipeline } from '.';\n\n/**\n * These modification will be run against `ios/Exponent/kernel` directory.\n * If you need to modify other files from the `ios` directory then find\n * a better place for it or refactor the function that depends on this list.\n * The nature of these changes is that they're not permanent and at one point\n * of time (SDK drop) these should be rollbacked.\n * @param versionName e.g. 21.0.0, 37.0.0, etc.\n * @param rollback This flag indicates whether the change should be rollbacked.\n */\nexport function kernelFilesTransforms(\n  versionName: string,\n  rollback: boolean = false\n): TransformPipeline {\n  return {\n    transforms: [\n      {\n        paths: ['EXAppViewController.m'],\n        ...withRollback(rollback, {\n          replace: /(?<=#import <React\\/RCTAppearance\\.h>)/,\n          with: `\\n#if __has_include(<${versionName}React/${versionName}RCTAppearance.h>)\\n#import <${versionName}React/${versionName}RCTAppearance.h>\\n#endif`,\n        }),\n      },\n      {\n        paths: ['EXAppViewController.m'],\n        ...withRollback(rollback, {\n          replace: /(?<=\\sRCTOverrideAppearancePreference\\(appearancePreference\\);)/,\n          with: `\\n#if __has_include(<${versionName}React/${versionName}RCTAppearance.h>)\\n  ${versionName}RCTOverrideAppearancePreference(appearancePreference);\\n#endif`,\n        }),\n      },\n    ],\n  };\n}\n\ntype Replacement = {\n  replace: RegExp | string;\n  with: string;\n};\n\n/**\n * If `rollback = true` then this function either return `rollbackReplacement`\n * or if it's not provided it used `replace` from `replacement` argument.\n * For the latter case, ensure you're not constructing `replacement.with` field with\n * any capture group from `replacement.replace` part, because it will be inlined directly\n * and additionally ensure if you don't want to escape some characters ðŸ¤”.\n */\nfunction withRollback(\n  rollback: boolean,\n  replacement: Replacement,\n  rollbackReplacement?: Replacement\n): Replacement {\n  return rollback ? rollbackReplacement ?? { replace: replacement.with, with: '' } : replacement;\n}\n"]}