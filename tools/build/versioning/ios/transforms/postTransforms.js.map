{"version":3,"file":"postTransforms.js","sourceRoot":"","sources":["../../../../src/versioning/ios/transforms/postTransforms.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\n\nimport { TransformPipeline } from '.';\n\nexport function postTransforms(versionName: string): TransformPipeline {\n  return {\n    logHeader(filePath: string) {\n      console.log(`Post-transforming ${chalk.magenta(filePath)}:`);\n    },\n    transforms: [\n      // react-native\n      {\n        paths: ['RCTRedBox.m', 'RCTLog.mm'],\n        replace: /#if (ABI\\d+_\\d+_\\d+)RCT_DEBUG/g,\n        with: '#if $1RCT_DEV',\n      },\n      {\n        paths: ['NSTextStorage+FontScaling.h', 'NSTextStorage+FontScaling.m'],\n        replace: /NSTextStorage \\(FontScaling\\)/,\n        with: `NSTextStorage (${versionName}FontScaling)`,\n      },\n      {\n        paths: [\n          'NSTextStorage+FontScaling.h',\n          'NSTextStorage+FontScaling.m',\n          'RCTTextShadowView.m',\n        ],\n        replace: /\\b(scaleFontSizeToFitSize|scaleFontSizeWithRatio|compareToSize)\\b/g,\n        with: `${versionName.toLowerCase()}_rct_$1`,\n      },\n      {\n        paths: 'RCTWebView.m',\n        replace: /@\"ABI\\d+_\\d+_\\d+React-js-navigation\"/,\n        with: '@\"react-js-navigation\"',\n      },\n      {\n        replace: new RegExp(`FB${versionName}ReactNativeSpec`, 'g'),\n        with: 'FBReactNativeSpec',\n      },\n      {\n        replace: new RegExp('\\\\b(Native\\\\w+Spec)\\\\b', 'g'),\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RCTInspectorPackagerConnection.m',\n        replace: /\\b(RECONNECT_DELAY_MS)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: `${versionName}FBReactNativeSpec`,\n        replace: /\\b(NSStringToNativeAppearanceColorSchemeName|NativeAppearanceColorSchemeNameToNSString)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RCTView.m',\n        replace: /\\b(SwitchAccessibilityTrait)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RCTSpringAnimation.m',\n        replace: /\\b(MAX_DELTA_TIME)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'ModuleRegistry.cpp',\n        replace: /(std::string normalizeName\\(std::string name\\) \\{)/,\n        with: `$1\\n  if (name.compare(0, ${versionName.length}, \"${versionName}\") == 0) {\\n    name = name.substr(${versionName.length});\\n  }\\n`,\n      },\n      {\n        paths: 'ModuleRegistry.cpp',\n        replace: /(\\(name\\.compare\\(\\d+, \\d+, \")([^\"]+)(RCT\"\\))/,\n        with: '$1$3',\n      },\n\n      // Universal modules\n      {\n        paths: `UniversalModules/${versionName}EXScoped`,\n        replace: /(EXScopedABI\\d+_\\d+_\\d+ReactNative)/g,\n        with: 'EXScopedReactNative',\n      },\n      {\n        paths: `${versionName}EXFileSystem`,\n        replace: new RegExp(`NSData\\\\+${versionName}EXFileSystem\\\\.h`, 'g'),\n        with: `${versionName}NSData+EXFileSystem.h`,\n      },\n      {\n        paths: `${versionName}EXNotifications`,\n        replace: new RegExp(`NSDictionary\\\\+${versionName}EXNotificationsVerifyingClass\\\\.h`, 'g'),\n        with: `${versionName}NSDictionary+EXNotificationsVerifyingClass.h`,\n      },\n\n      // react-native-maps\n      {\n        paths: 'AIRMapWMSTile',\n        replace: /\\b(TileOverlay)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'AIRGoogleMapWMSTile',\n        replace: /\\b(WMSTileOverlay)\\b/g,\n        with: `${versionName}$1`,\n      },\n\n      // react-native-svg\n      {\n        paths: 'RNSVGRenderable.m',\n        replace: /\\b(saturate)\\(/g,\n        with: `${versionName}$1(`,\n      },\n      {\n        paths: 'RNSVGPainter.m',\n        replace: /\\b(PatternFunction)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RNSVGFontData.m',\n        replace: /\\b(AbsoluteFontWeight|bolder|lighter|nearestFontWeight)\\(/gi,\n        with: `${versionName}$1(`,\n      },\n      {\n        paths: 'RNSVGTSpan.m',\n        replace: /\\b(TopAlignedLabel\\s*\\*\\s*label)\\b/gi,\n        with: 'static $1',\n      },\n      {\n        paths: 'RNSVGTSpan.m',\n        replace: /\\b(TopAlignedLabel)\\b/gi,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RNSVGMarker.m',\n        replace: /\\b(deg2rad)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RNSVGMarkerPosition.m',\n        replace: /\\b(PathIsDone|rad2deg|SlopeAngleRadians|CurrentAngle|subtract|ExtractPathElementFeatures|UpdateFromPathElement)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RNSVGMarkerPosition.m',\n        replace: /\\b(positions_|element_index_|origin_|subpath_start_|in_slope_|out_slope_|auto_start_reverse_)\\b/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'RNSVGPathMeasure.m',\n        replace: /\\b(distance|subdivideBezierAtT)\\b/g,\n        with: `${versionName}$1`,\n      },\n\n      // react-native-webview\n      {\n        paths: 'EXVersionManager.mm',\n        replace: /#import <react-native-(webview)\\//g,\n        with: `#import <${versionName}react-native-$1/`,\n      },\n\n      // react-native-reanimated\n      {\n        paths: 'REATransitionAnimation.m',\n        replace: /(SimAnimationDragCoefficient)\\(/g,\n        with: `${versionName}$1(`,\n      },\n      {\n        paths: 'Reanimated',\n        replace: /(_bridge_reanimated)/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'EXVersionManager.mm',\n        replace: /(_bridge_reanimated)/g,\n        with: `${versionName}$1`,\n      },\n      {\n        paths: 'NativeProxy.mm',\n        replace: /@\"ABI\\d+_\\d+_\\d+RCTView\"/g,\n        with: `@\"RCTView\"`,\n      },\n\n      // react-native-shared-element\n      {\n        paths: 'RNSharedElementNode.m',\n        replace: /\\b(NSArray\\s*\\*\\s*_imageResolvers)\\b/,\n        with: 'static $1',\n      },\n\n      // react-native-safe-area-context\n      {\n        paths: [\n          'RCTView+SafeAreaCompat.h',\n          'RCTView+SafeAreaCompat.m',\n          'RNCSafeAreaProvider.m',\n          'RNCSafeAreaView.m',\n        ],\n        replace: /\\b(UIEdgeInsetsEqualToEdgeInsetsWithThreshold)\\b/g,\n        with: `${versionName}$1`,\n      },\n    ],\n  };\n}\n"]}