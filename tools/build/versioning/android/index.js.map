{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/versioning/android/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA0B;AAC1B,wDAA0B;AAC1B,gEAAgC;AAChC,wDAAgC;AAChC,gDAAwB;AACxB,oDAA4B;AAC5B,oEAA2C;AAE3C,2CAAmE;AACnE,+DAAiD;AACjD,6CAAwD;AAExD,MAAM,QAAQ,GAAG,WAAW,CAAC,wBAAwB,EAAE,CAAC;AACxD,MAAM,WAAW,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;AAChD,MAAM,aAAa,GAAG,WAAW,CAAC,eAAe,EAAE,CAAC;AACpD,MAAM,UAAU,GAAG,cAAI,CAAC,IAAI,CAAC,aAAa,EAAE,wBAAwB,CAAC,CAAC;AAEtE,MAAM,OAAO,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9C,MAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AACxD,MAAM,iBAAiB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AACnE,MAAM,wBAAwB,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,cAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,YAAY,OAAO,EAAE,CAAC,CAAC;AAClG,MAAM,uBAAuB,GAAG,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AACxE,MAAM,eAAe,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,qBAAqB,CAAC,CAAC;AACjF,MAAM,oBAAoB,GAAG,cAAI,CAAC,IAAI,CACpC,QAAQ,EACR,gBAAgB,EAChB,SAAS,EACT,qBAAqB,CACtB,CAAC;AACF,MAAM,kBAAkB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;AACrE,MAAM,kBAAkB,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;AAC9D,MAAM,eAAe,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAC/D,MAAM,eAAe,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;AACnE,MAAM,cAAc,GAAG,cAAI,CAAC,IAAI,CAC9B,YAAY,EACZ,oFAAoF,CACrF,CAAC;AACF,MAAM,qBAAqB,GAAG,cAAI,CAAC,IAAI,CACrC,YAAY,EACZ,gDAAgD,CACjD,CAAC;AACF,MAAM,kBAAkB,GAAG,cAAI,CAAC,IAAI,CAClC,OAAO,EACP,4DAA4D,CAC7D,CAAC;AACF,MAAM,gBAAgB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAChE,MAAM,eAAe,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC9D,MAAM,yBAAyB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,qCAAqC,CAAC,CAAC;AAChG,MAAM,4BAA4B,GAAG,cAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;AACtF,MAAM,6BAA6B,GAAG,cAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC;AACtF,MAAM,wBAAwB,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,oCAAoC,CAAC,CAAC;AAE9F,KAAK,UAAU,kBAAkB,CAAC,QAAgB,EAAE,MAAc,EAAE,cAAsB,EAAE;IAC1F,MAAM,WAAW,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACxD,MAAM,kBAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;AACzE,CAAC;AAED,KAAK,UAAU,oCAAoC,CAAC,eAAuB,EAAE,QAAgB;IAC3F,OAAO,CAAC,GAAG,CACT,+BAA+B,eAAK,CAAC,IAAI,CAAC,gBAAgB,eAAe,EAAE,CAAC,QAAQ,eAAK,CAAC,IAAI,CAC5F,cAAc,eAAe,EAAE,CAChC,SAAS,eAAK,CAAC,OAAO,CAAC,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,KAAK,CAChE,CAAC;IACF,MAAM,kBAAkB,CACtB,QAAQ,EACR,IAAI,MAAM,CACR,uBAAuB,eAAe,8BAA8B,eAAe,SAAS,EAC5F,IAAI,CACL,EACD,EAAE,CACH,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,4BAA4B,CAAC,wBAAgC;IAC1E,OAAO,CAAC,GAAG,CACT,kCAAkC,eAAK,CAAC,OAAO,CAC7C,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAClD,KAAK,CACP,CAAC;IACF,MAAM,kBAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAC5C,CAAC;AAED,KAAK,UAAU,uBAAuB,CAAC,eAAuB,EAAE,YAAoB;IAClF,OAAO,CAAC,GAAG,CACT,+BAA+B,eAAK,CAAC,IAAI,CACvC,kBAAkB,eAAe,MAAM,CACxC,QAAQ,eAAK,CAAC,IAAI,CAAC,gBAAgB,eAAe,MAAM,CAAC,SAAS,eAAK,CAAC,OAAO,CAC9E,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,CACtC,KAAK,CACP,CAAC;IACF,MAAM,kBAAkB,CACtB,YAAY,EACZ,IAAI,MAAM,CACR,yBAAyB,eAAe,oCAAoC,eAAe,gBAAgB,EAC3G,IAAI,CACL,EACD,EAAE,CACH,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,6BAA6B,CAAC,OAAe,EAAE,kBAA0B;IACtF,OAAO,CAAC,GAAG,CACT,YAAY,eAAK,CAAC,KAAK,CAAC,YAAY,OAAO,EAAE,CAAC,SAAS,eAAK,CAAC,OAAO,CAClE,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAC5C,KAAK,CACP,CAAC;IACF,MAAM,kBAAkB,CAAC,kBAAkB,EAAE,IAAI,MAAM,CAAC,WAAW,OAAO,WAAW,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AACnG,CAAC;AAED,KAAK,UAAU,0BAA0B,CAAC,OAAe,EAAE,eAAuB;IAChF,OAAO,CAAC,GAAG,CACT,iCAAiC,eAAK,CAAC,KAAK,CAAC,YAAY,OAAO,EAAE,CAAC,SAAS,eAAK,CAAC,OAAO,CACvF,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,eAAe,CAAC,CACzC,KAAK,CACP,CAAC;IACF,MAAM,kBAAkB,CACtB,eAAe,EACf,IAAI,MAAM,CAAC,0CAA0C,OAAO,qBAAqB,CAAC,EAClF,EAAE,CACH,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,0BAA0B,CAAC,OAAe,EAAE,eAAuB;IAChF,OAAO,CAAC,GAAG,CACT,YAAY,eAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,eAAK,CAAC,OAAO,CACnD,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,eAAe,CAAC,CACzC,KAAK,CACP,CAAC;IACF,MAAM,kBAAkB,CAAC,eAAe,EAAE,IAAI,MAAM,CAAC,IAAI,OAAO,OAAO,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AACrF,CAAC;AAED,KAAK,UAAU,yBAAyB,CAAC,OAAe,EAAE,aAAqB;IAC7E,OAAO,CAAC,GAAG,CACT,kCAAkC,eAAK,CAAC,OAAO,CAAC,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,KAAK,CAC7F,CAAC;IACF,MAAM,kBAAkB,CACtB,aAAa,EACb,IAAI,MAAM,CAAC,0CAA0C,OAAO,YAAY,CAAC,EACzE,EAAE,CACH,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,+CAA+C,CAAC,OAAe;IAC5E,MAAM,OAAO,GAAG,IAAI,MAAM,CACxB,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,eAAe,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EACzE,IAAI,CACL,CAAC;IACF,IAAI,YAAY,GAAG,CAAC,CAAC;IAErB,MAAM,KAAK,GAAG,MAAM,sBAAI,CAAC,2CAA2C,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IAE5F,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;QACxB,MAAM,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACxD,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,KAAK,CAAC;QAEV,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,EAAE;YAClD,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAClD,MAAM,mBAAmB,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAC1F,MAAM,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,mBAAmB,GAAG,CAAC,CAAC,CAAC;YAChE,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;YAE9E,EAAE,YAAY,CAAC;YAEf,OAAO,CAAC,GAAG,CACT,SAAS,eAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,eAAK,CAAC,OAAO,CACrD,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAClC,GAAG,CACL,CAAC;YAEF,KAAK,IAAI,SAAS,GAAG,kBAAkB,EAAE,SAAS,IAAI,iBAAiB,EAAE,SAAS,EAAE,EAAE;gBACpF,OAAO,CAAC,GAAG,CACT,GAAG,eAAK,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,GAAG,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAChE,KAAK,CAAC,CAAC,CAAC,EACR,eAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1B,EAAE,CACJ,CAAC;aACH;YACD,OAAO,CAAC,GAAG,EAAE,CAAC;SACf;KACF;IACD,OAAO,YAAY,GAAG,CAAC,CAAC;AAC1B,CAAC;AAEM,KAAK,UAAU,kBAAkB,CAAC,OAAe;IACtD,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC;IACpD,MAAM,eAAe,GAAG,GAAG,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;IAEnD,OAAO,CAAC,GAAG,CAAC,wBAAwB,eAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,eAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAE3F,mCAAmC;IACnC,MAAM,4BAA4B,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC;IACtE,MAAM,6BAA6B,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IACjE,MAAM,0BAA0B,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAE3D,sDAAsD;IACtD,MAAM,oCAAoC,CAAC,eAAe,EAAE,uBAAuB,CAAC,CAAC;IACrF,MAAM,oCAAoC,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;IAChF,MAAM,oCAAoC,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;IAC5E,MAAM,oCAAoC,CAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC;IAEnF,wCAAwC;IACxC,MAAM,yBAAyB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IAE7D,0BAA0B;IAC1B,MAAM,uBAAuB,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;IAChE,MAAM,uBAAuB,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC;IAErE,qDAAqD;IACrD,MAAM,0BAA0B,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAE3D,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;IAE/D,IAAI,MAAM,+CAA+C,CAAC,OAAO,CAAC,EAAE;QAClE,OAAO,CAAC,GAAG,CACT,eAAK,CAAC,MAAM,CAAC,+EAA+E,CAAC,CAC9F,CAAC;KACH;AACH,CAAC;AAlCD,gDAkCC;AAED,SAAS,SAAS,CAAC,GAAW,EAAE,UAAkB;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC3C,IAAI,GAAG,CAAC,QAAQ,CAAC,uBAAW,CAAC,CAAC,CAAC,CAAC,EAAE;YAChC,OAAO,GAAG,GAAG,OAAO,UAAU,EAAE,CAAC;SAClC;KACF;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAS,WAAW,CAAC,IAAY,EAAE,UAAkB;IACnD,IACE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,EACzC;QACA,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;SAC1C;QACD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,KAAK,UAAU,kBAAkB,CAAC,QAAgB,EAAE,UAAkB;IACpE,IAAI,IAAI,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjC,MAAM,kBAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC/B,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,GAAG,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACrC,MAAM,kBAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC;KAC5C;AACH,CAAC;AAED,KAAK,UAAU,oBAAoB,CAAC,OAAe,EAAE,UAAkB;IACrE,MAAM,OAAO,GAAG,MAAM,UAAU,EAAE,CAAC;IACnC,OAAO,qBAAU,CACf,QAAQ,6BAA6B,IAAI,wBAAwB,CAC/D,OAAO,CACR,qCAAqC;QACpC,0BAA0B,OAAO,MAAM,OAAO,OAAO,UAAU,MAAM,EACvE,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,+BAA+B;IAC5C,MAAM,kBAAE,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;IAC3C,MAAM,kBAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAC1C,MAAM,kBAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,yBAAyB,CAAC,CAAC;IAC3D,MAAM,kBAAE,CAAC,IAAI,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC;AAC3D,CAAC;AAED,KAAK,UAAU,kBAAkB,CAAC,OAAe;IAC/C,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,MAAM,UAAU,EAAE,CAAC;IACrC,MAAM,gBAAgB,GAAG,cAAI,CAAC,IAAI,CAChC,WAAW,CAAC,aAAa,EAAE,EAC3B,gBAAgB,EAChB,YAAY,SAAS,EAAE,CACxB,CAAC;IAEF,qBAAqB;IACrB,MAAM,gBAAgB,GAAG,MAAM,mCAAuB,EAAE,CAAC;IACzD,KAAK,MAAM,WAAW,IAAI,gBAAgB,EAAE;QAC1C,MAAM,cAAc,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,qBAAU,CACd,QAAQ,wBAAwB,IAAI,4BAA4B,WAAW;YACzE,+EAA+E;YAC/E,yBAAyB,cAAc,OAAO,UAAU,MAAM,cAAc,KAAK,EACnF,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAC;QAEF,aAAa;QACb,MAAM,uBAAuB,GAC3B,mEAAmE,CAAC;QACtE,MAAM,uBAAuB,GAAG,uDAAuD,CAAC;QACxF,MAAM,qBAAU,CACd,QAAQ,gBAAgB,WAAW;YACjC,+EAA+E;YAC/E,yBAAyB,uBAAuB,OAAO,UAAU,MAAM,uBAAuB,KAAK,EACrG,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAC;KACH;IAED,0FAA0F;IAC1F,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,iBAAiB,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACnF,sBAAI,CAAC,cAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;QACpD,sBAAI,CAAC,cAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;QACxD,sBAAI,CAAC,cAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;KAC7C,CAAC,CAAC;IACH,IAAI,SAAS,GAAG,CAAC,GAAG,kBAAkB,EAAE,GAAG,mBAAmB,EAAE,GAAG,iBAAiB,CAAC,CAAC;IACtF,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IAEzF,6CAA6C;IAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC3C,IAAI,OAAO,GAAG,uBAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,oBAAoB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;KACjD;IAED,+EAA+E;IAC/E,MAAM,oBAAoB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAChD,MAAM,oBAAoB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAE7C,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IAC1D,MAAM,qBAAU,CACd,QAAQ,6BAA6B,IAAI,gBAAgB,wCAAwC,UAAU,GAAG,EAC9G,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAClC,CAAC;IAEF,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;IAC5D,MAAM,qBAAU,CACd,QAAQ,6BAA6B,IAAI,gBAAgB,+CAA+C,EACxG,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAClC,CAAC;IAEF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,kBAAQ,CAAC,MAAM,CAAyB;QAClE;YACE,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,OAAO,EAAE,KAAK;SACf;KACF,CAAC,CAAC;IACH,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;KACjC;AACH,CAAC;AAED,KAAK,UAAU,mBAAmB,CAAC,OAAe;IAChD,MAAM,QAAQ,GAAG,MAAM,iCAAsB,EAAE,CAAC;IAChD,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;QAC1B,IACE,GAAG,CAAC,qBAAqB,CAAC,SAAS,CAAC;YACpC,GAAG,CAAC,gCAAgC,CAAC,SAAS,CAAC;YAC/C,GAAG,CAAC,uBAAuB,CAAC,SAAS,CAAC,EACtC;YACA,MAAM,qBAAU,CACd,6BAA6B,EAC7B,CAAC,OAAO,EAAE,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,mBAAmB,CAAC,CAAC,EACvD;gBACE,KAAK,EAAE,IAAI;gBACX,GAAG,EAAE,UAAU;aAChB,CACF,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;SAC3D;KACF;AACH,CAAC;AAED,KAAK,UAAU,gCAAgC,CAAC,OAAe;IAC7D,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,MAAM,UAAU,EAAE,CAAC;IACnC,MAAM,YAAY,GAAG,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAE3C,MAAM,kBAAkB,CACtB,oBAAoB,EACpB,IAAI,MAAM,CAAC,gCAAgC,CAAC,EAC5C;qBACiB,YAAY;8BACH,OAAO;mBAClB,YAAY,MAAM,CAClC,CAAC;IAEF,MAAM,kBAAkB,CACtB,oBAAoB,EACpB,IAAI,MAAM,CAAC,wCAAwC,CAAC,EACpD;qBACiB,YAAY;;;;sBAIX,OAAO;;;;;;gCAMG,OAAO;;;mBAGpB,YAAY,MAAM,CAClC,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,kCAAkC,CAAC,OAAe;IAC/D,IAAI,UAAU,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IAC5D,IAAI,QAAQ,CAAC;IACb,iFAAiF;IACjF,IAAI;QACF,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnC;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,oEAAoE,EAAE,CAAC,CAAC,CAAC;QACrF,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,UAAU,CAAC,CAAC;QAC5D,QAAQ,GAAG;YACT,WAAW,EAAE,EAAE;SAChB,CAAC;KACH;IACD,gBAAgB;IAChB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,MAAM,kBAAE,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAChE,CAAC;AAED,KAAK,UAAU,YAAY,CAAC,OAAe;IACzC,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,MAAM,UAAU,EAAE,CAAC;IAEnC,MAAM,mBAAmB,GAAG,cAAI,CAAC,IAAI,CACnC,wBAAwB,CAAC,OAAO,CAAC,EACjC,eAAe,EACf,OAAO,CACR,CAAC;IAEF,IAAI,aAAa,GAAa,EAAE,CAAC;IAEjC,4CAA4C;IAC5C,+FAA+F;IAC/F,oCAAoC;IACpC,MAAM,kBAAkB,GAAG,MAAM,sBAAI,CACnC,cAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,mCAAmC,CAAC,CACpE,CAAC;IACF,KAAK,MAAM,IAAI,IAAI,kBAAkB,EAAE;QACrC,MAAM,QAAQ,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,OAAO,EAAE,CAAC,EAAE;YAC5C,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,4CAA4C,CAAC,CAAC;SACpF;KACF;IAED,6DAA6D;IAC7D,aAAa,CAAC,IAAI,CAAC,cAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC,CAAC;IAEnE,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;IAC7D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAE3B,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;QAChC,MAAM,kBAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACvB;IAED,gCAAgC;IAChC,MAAM,4BAA4B,GAAG,cAAI,CAAC,IAAI,CAC5C,mBAAmB,EACnB,wCAAwC,CACzC,CAAC;IACF,MAAM,kBAAkB,CACtB,4BAA4B,EAC5B,IAAI,MAAM,CAAC,qCAAqC,EAAE,GAAG,CAAC,EACtD,qCAAqC,CACtC,CAAC;IACF,MAAM,kBAAkB,CACtB,4BAA4B,EAC5B,IAAI,MAAM,CAAC,mCAAmC,EAAE,GAAG,CAAC,EACpD,mCAAmC,CACpC,CAAC;IAEF,MAAM,kBAAkB,CACtB,cAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,uCAAuC,CAAC,EACvE,IAAI,MAAM,CAAC,sEAAsE,CAAC,EAClF,aAAa,CACd,CAAC;IAEF,MAAM,kBAAkB,CACtB,cAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,2CAA2C,CAAC,EAC3E,IAAI,MAAM,CAAC,gCAAgC,CAAC,EAC5C,UAAU,OAAO,iCAAiC,CACnD,CAAC;IAEF,2DAA2D;IAC3D,MAAM,qBAAU,CACd,QAAQ,mBAAmB,qCAAqC;QAC9D,gCAAgC,OAAO,sBAAsB,OAAO,0BAA0B,EAChG,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAC;IACF,MAAM,qBAAU,CACd,QAAQ,mBAAmB,mCAAmC;QAC5D,gCAAgC,OAAO,qBAAqB,OAAO,yBAAyB,EAC9F,EAAE,EACF,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAC;IAEF,0CAA0C;IAC1C,MAAM,kBAAkB,CACtB,eAAe,EACf,IAAI,MAAM,CAAC,8BAA8B,CAAC,EAC1C;;8CAE0C,OAAO;MAC/C,CACH,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,sBAAsB,CAAC,OAAe;IACnD,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,MAAM,UAAU,EAAE,CAAC;IACnC,MAAM,qBAAqB,GAAG,wBAAwB,CAAC,OAAO,CAAC,CAAC;IAEhE,MAAM,iBAAiB,GAAG,KAAK,IAAI,EAAE;QACnC,MAAM,qBAAU,CAAC,uBAAuB,OAAO,iBAAiB,EAAE,EAAE,EAAE;YACpE,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,cAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAC;YAC/C,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,MAAM,yBAAyB,GAAG,KAAK,IAAI,EAAE;QAC3C,MAAM,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACjE,MAAM,QAAQ,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC1C,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;YACxB,MAAM,kBAAE,CAAC,MAAM,CAAC,cAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;SAC3C;IACH,CAAC,CAAC;IAEF,MAAM,yBAAyB,GAAG,KAAK,IAAI,EAAE;QAC3C,MAAM,qBAAU,CAAC,iDAAiD,EAAE,CAAC,OAAO,CAAC,EAAE;YAC7E,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,MAAM,iBAAiB,EAAE,CAAC;IAC1B,MAAM,yBAAyB,EAAE,CAAC;IAClC,MAAM,yBAAyB,EAAE,CAAC;AACpC,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,OAAe;IACnD,OAAO,CAAC,GAAG,CAAC,uDAAuD,CAAC,CAAC;IACrE,MAAM,+BAA+B,EAAE,CAAC;IACxC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;IACjE,MAAM,qBAAU,CAAC,4BAA4B,EAAE,CAAC,OAAO,CAAC,EAAE;QACxD,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,UAAU;KAChB,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,kFAAkF,CAAC,CAAC;IAChG,MAAM,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAClC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IAC1D,MAAM,sBAAsB,CAAC,OAAO,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;IACjE,MAAM,qBAAU,CAAC,wBAAwB,EAAE,CAAC,OAAO,CAAC,EAAE;QACpD,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,UAAU;QACf,KAAK,EAAE,SAAS;KACjB,CAAC,CAAC;IACH,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;IACnE,MAAM,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,mEAAmE,CAAC,CAAC;IACjF,MAAM,gCAAgC,CAAC,OAAO,CAAC,CAAC;IAChD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,gEAAgE,CAAC,CAAC;IAC9E,MAAM,kCAAkC,CAAC,OAAO,CAAC,CAAC;IAClD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAErC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC1C,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC;IAC5B,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AACnC,CAAC;AA5CD,0CA4CC","sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs-extra';\nimport glob from 'glob-promise';\nimport inquirer from 'inquirer';\nimport path from 'path';\nimport semver from 'semver';\nimport spawnAsync from '@expo/spawn-async';\n\nimport { JniLibNames, getJavaPackagesToRename } from './libraries';\nimport * as Directories from '../../Directories';\nimport { getListOfPackagesAsync } from '../../Packages';\n\nconst EXPO_DIR = Directories.getExpoRepositoryRootDir();\nconst ANDROID_DIR = Directories.getAndroidDir();\nconst EXPOTOOLS_DIR = Directories.getExpotoolsDir();\nconst SCRIPT_DIR = path.join(EXPOTOOLS_DIR, 'src/versioning/android');\n\nconst appPath = path.join(ANDROID_DIR, 'app');\nconst expoviewPath = path.join(ANDROID_DIR, 'expoview');\nconst versionedAbisPath = path.join(ANDROID_DIR, 'versioned-abis');\nconst versionedExpoviewAbiPath = (abiName) => path.join(versionedAbisPath, `expoview-${abiName}`);\nconst expoviewBuildGradlePath = path.join(expoviewPath, 'build.gradle');\nconst appManifestPath = path.join(appPath, 'src', 'main', 'AndroidManifest.xml');\nconst templateManifestPath = path.join(\n  EXPO_DIR,\n  'template-files',\n  'android',\n  'AndroidManifest.xml'\n);\nconst settingsGradlePath = path.join(ANDROID_DIR, 'settings.gradle');\nconst appBuildGradlePath = path.join(appPath, 'build.gradle');\nconst buildGradlePath = path.join(ANDROID_DIR, 'build.gradle');\nconst sdkVersionsPath = path.join(ANDROID_DIR, 'sdkVersions.json');\nconst rnActivityPath = path.join(\n  expoviewPath,\n  'src/main/java/host/exp/exponent/experience/MultipleVersionReactNativeActivity.java'\n);\nconst expoviewConstantsPath = path.join(\n  expoviewPath,\n  'src/main/java/host/exp/exponent/Constants.java'\n);\nconst testSuiteTestsPath = path.join(\n  appPath,\n  'src/androidTest/java/host/exp/exponent/TestSuiteTests.java'\n);\nconst reactAndroidPath = path.join(ANDROID_DIR, 'ReactAndroid');\nconst reactCommonPath = path.join(ANDROID_DIR, 'ReactCommon');\nconst versionedReactAndroidPath = path.join(ANDROID_DIR, 'versioned-react-native/ReactAndroid');\nconst versionedReactAndroidJniPath = path.join(versionedReactAndroidPath, 'src/main');\nconst versionedReactAndroidJavaPath = path.join(versionedReactAndroidJniPath, 'java');\nconst versionedReactCommonPath = path.join(ANDROID_DIR, 'versioned-react-native/ReactCommon');\n\nasync function transformFileAsync(filePath: string, regexp: RegExp, replacement: string = '') {\n  const fileContent = await fs.readFile(filePath, 'utf8');\n  await fs.writeFile(filePath, fileContent.replace(regexp, replacement));\n}\n\nasync function removeVersionReferencesFromFileAsync(sdkMajorVersion: string, filePath: string) {\n  console.log(\n    `Removing code surrounded by ${chalk.gray(`// BEGIN_SDK_${sdkMajorVersion}`)} and ${chalk.gray(\n      `// END_SDK_${sdkMajorVersion}`\n    )} from ${chalk.magenta(path.relative(EXPO_DIR, filePath))}...`\n  );\n  await transformFileAsync(\n    filePath,\n    new RegExp(\n      `\\\\s*//\\\\s*BEGIN_SDK_${sdkMajorVersion}(_\\d+)*\\\\n.*?//\\\\s*END_SDK_${sdkMajorVersion}(_\\d+)*`,\n      'gs'\n    ),\n    ''\n  );\n}\n\nasync function removeVersionedExpoviewAsync(versionedExpoviewAbiPath: string) {\n  console.log(\n    `Removing versioned expoview at ${chalk.magenta(\n      path.relative(EXPO_DIR, versionedExpoviewAbiPath)\n    )}...`\n  );\n  await fs.remove(versionedExpoviewAbiPath);\n}\n\nasync function removeFromManifestAsync(sdkMajorVersion: string, manifestPath: string) {\n  console.log(\n    `Removing code surrounded by ${chalk.gray(\n      `<!-- BEGIN_SDK_${sdkMajorVersion} -->`\n    )} and ${chalk.gray(`<!-- END_SDK_${sdkMajorVersion} -->`)} from ${chalk.magenta(\n      path.relative(EXPO_DIR, manifestPath)\n    )}...`\n  );\n  await transformFileAsync(\n    manifestPath,\n    new RegExp(\n      `\\\\s*<!--\\\\s*BEGIN_SDK_${sdkMajorVersion}(_\\d+)*\\\\s*-->.*?<!--\\\\s*END_SDK_${sdkMajorVersion}(_\\d+)*\\\\s*-->`,\n      'gs'\n    ),\n    ''\n  );\n}\n\nasync function removeFromSettingsGradleAsync(abiName: string, settingsGradlePath: string) {\n  console.log(\n    `Removing ${chalk.green(`expoview-${abiName}`)} from ${chalk.magenta(\n      path.relative(EXPO_DIR, settingsGradlePath)\n    )}...`\n  );\n  await transformFileAsync(settingsGradlePath, new RegExp(`\\\\n\\\\s*\"${abiName}\",[^\\\\n]*`, 'g'), '');\n}\n\nasync function removeFromBuildGradleAsync(abiName: string, buildGradlePath: string) {\n  console.log(\n    `Removing maven repository for ${chalk.green(`expoview-${abiName}`)} from ${chalk.magenta(\n      path.relative(EXPO_DIR, buildGradlePath)\n    )}...`\n  );\n  await transformFileAsync(\n    buildGradlePath,\n    new RegExp(`\\\\s*maven\\\\s*{\\\\s*url\\\\s*\".*?/expoview-${abiName}/maven\"\\\\s*}[^\\\\n]*`),\n    ''\n  );\n}\n\nasync function removeFromSdkVersionsAsync(version: string, sdkVersionsPath: string) {\n  console.log(\n    `Removing ${chalk.cyan(version)} from ${chalk.magenta(\n      path.relative(EXPO_DIR, sdkVersionsPath)\n    )}...`\n  );\n  await transformFileAsync(sdkVersionsPath, new RegExp(`\"${version}\",\\s*`, 'g'), '');\n}\n\nasync function removeTestSuiteTestsAsync(version: string, testsFilePath: string) {\n  console.log(\n    `Removing test-suite tests from ${chalk.magenta(path.relative(EXPO_DIR, testsFilePath))}...`\n  );\n  await transformFileAsync(\n    testsFilePath,\n    new RegExp(`\\\\s*(@\\\\w+\\\\s+)*@ExpoSdkVersionTest\\\\(\"${version}\"\\\\)[^}]+}`),\n    ''\n  );\n}\n\nasync function findAndPrintVersionReferencesInSourceFilesAsync(version: string): Promise<boolean> {\n  const pattern = new RegExp(\n    `(${version.replace(/\\./g, '[._]')}|(SDK|ABI).?${semver.major(version)})`,\n    'ig'\n  );\n  let matchesCount = 0;\n\n  const files = await glob('**/{src/**/*.@(java|kt|xml),build.gradle}', { cwd: ANDROID_DIR });\n\n  for (const file of files) {\n    const filePath = path.join(ANDROID_DIR, file);\n    const fileContent = await fs.readFile(filePath, 'utf8');\n    const fileLines = fileContent.split(/\\r\\n?|\\n/g);\n    let match;\n\n    while ((match = pattern.exec(fileContent)) != null) {\n      const index = pattern.lastIndex - match[0].length;\n      const lineNumberWithMatch = fileContent.substring(0, index).split(/\\r\\n?|\\n/g).length - 1;\n      const firstLineInContext = Math.max(0, lineNumberWithMatch - 2);\n      const lastLineInContext = Math.min(lineNumberWithMatch + 2, fileLines.length);\n\n      ++matchesCount;\n\n      console.log(\n        `Found ${chalk.bold.green(match[0])} in ${chalk.magenta(\n          path.relative(EXPO_DIR, filePath)\n        )}:`\n      );\n\n      for (let lineIndex = firstLineInContext; lineIndex <= lastLineInContext; lineIndex++) {\n        console.log(\n          `${chalk.gray(1 + lineIndex + ':')} ${fileLines[lineIndex].replace(\n            match[0],\n            chalk.bgMagenta(match[0])\n          )}`\n        );\n      }\n      console.log();\n    }\n  }\n  return matchesCount > 0;\n}\n\nexport async function removeVersionAsync(version: string) {\n  const abiName = `abi${version.replace(/\\./g, '_')}`;\n  const sdkMajorVersion = `${semver.major(version)}`;\n\n  console.log(`Removing SDK version ${chalk.cyan(version)} for ${chalk.blue('Android')}...`);\n\n  // Remove expoview-abi*_0_0 library\n  await removeVersionedExpoviewAsync(versionedExpoviewAbiPath(abiName));\n  await removeFromSettingsGradleAsync(abiName, settingsGradlePath);\n  await removeFromBuildGradleAsync(abiName, buildGradlePath);\n\n  // Remove code surrounded by BEGIN_SDK_* and END_SDK_*\n  await removeVersionReferencesFromFileAsync(sdkMajorVersion, expoviewBuildGradlePath);\n  await removeVersionReferencesFromFileAsync(sdkMajorVersion, appBuildGradlePath);\n  await removeVersionReferencesFromFileAsync(sdkMajorVersion, rnActivityPath);\n  await removeVersionReferencesFromFileAsync(sdkMajorVersion, expoviewConstantsPath);\n\n  // Remove test-suite tests from the app.\n  await removeTestSuiteTestsAsync(version, testSuiteTestsPath);\n\n  // Update AndroidManifests\n  await removeFromManifestAsync(sdkMajorVersion, appManifestPath);\n  await removeFromManifestAsync(sdkMajorVersion, templateManifestPath);\n\n  // Remove SDK version from the list of supported SDKs\n  await removeFromSdkVersionsAsync(version, sdkVersionsPath);\n\n  console.log(`\\nLooking for SDK references in source files...`);\n\n  if (await findAndPrintVersionReferencesInSourceFilesAsync(version)) {\n    console.log(\n      chalk.yellow(`Please review all of these references and remove them manually if possible!\\n`)\n    );\n  }\n}\n\nfunction renameLib(lib: string, abiVersion: string) {\n  for (let i = 0; i < JniLibNames.length; i++) {\n    if (lib.endsWith(JniLibNames[i])) {\n      return `${lib}_abi${abiVersion}`;\n    }\n  }\n\n  return lib;\n}\n\nfunction processLine(line: string, abiVersion: string) {\n  if (\n    line.startsWith('LOCAL_MODULE') ||\n    line.startsWith('LOCAL_SHARED_LIBRARIES') ||\n    line.startsWith('LOCAL_STATIC_LIBRARIES')\n  ) {\n    let splitLine = line.split('=');\n    let libs = splitLine[1].split(' ');\n    for (let i = 0; i < libs.length; i++) {\n      libs[i] = renameLib(libs[i], abiVersion);\n    }\n    splitLine[1] = libs.join(' ');\n    line = splitLine.join('=');\n  }\n\n  return line;\n}\n\nasync function processMkFileAsync(filename: string, abiVersion: string) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  await fs.truncate(filename, 0);\n  let lines = fileString.split('\\n');\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    line = processLine(line, abiVersion);\n    await fs.appendFile(filename, `${line}\\n`);\n  }\n}\n\nasync function processJavaCodeAsync(libName: string, abiVersion: string) {\n  const abiName = `abi${abiVersion}`;\n  return spawnAsync(\n    `find ${versionedReactAndroidJavaPath} ${versionedExpoviewAbiPath(\n      abiName\n    )} -iname '*.java' -type f -print0 | ` +\n      `xargs -0 sed -i '' 's/\"${libName}\"/\"${libName}_abi${abiVersion}\"/g'`,\n    [],\n    { shell: true }\n  );\n}\n\nasync function updateVersionedReactNativeAsync() {\n  await fs.remove(versionedReactAndroidPath);\n  await fs.remove(versionedReactCommonPath);\n  await fs.copy(reactAndroidPath, versionedReactAndroidPath);\n  await fs.copy(reactCommonPath, versionedReactCommonPath);\n}\n\nasync function renameJniLibsAsync(version: string) {\n  const abiVersion = version.replace(/\\./g, '_');\n  const abiPrefix = `abi${abiVersion}`;\n  const versionedAbiPath = path.join(\n    Directories.getAndroidDir(),\n    'versioned-abis',\n    `expoview-${abiPrefix}`\n  );\n\n  // Update JNI methods\n  const packagesToRename = await getJavaPackagesToRename();\n  for (const javaPackage of packagesToRename) {\n    const pathForPackage = javaPackage.replace(/\\./g, '\\\\/');\n    await spawnAsync(\n      `find ${versionedReactCommonPath} ${versionedReactAndroidJniPath} -type f ` +\n        `\\\\( -name \\*.java -o -name \\*.h -o -name \\*.cpp -o -name \\*.mk \\\\) -print0 | ` +\n        `xargs -0 sed -i '' 's/${pathForPackage}/abi${abiVersion}\\\\/${pathForPackage}/g'`,\n      [],\n      { shell: true }\n    );\n\n    // reanimated\n    const oldJNIReanimatedPackage =\n      'versioned\\\\/host\\\\/exp\\\\/exponent\\\\/modules\\\\/api\\\\/reanimated\\\\/';\n    const newJNIReanimatedPackage = 'host\\\\/exp\\\\/exponent\\\\/modules\\\\/api\\\\/reanimated\\\\/';\n    await spawnAsync(\n      `find ${versionedAbiPath} -type f ` +\n        `\\\\( -name \\*.java -o -name \\*.h -o -name \\*.cpp -o -name \\*.mk \\\\) -print0 | ` +\n        `xargs -0 sed -i '' 's/${oldJNIReanimatedPackage}/abi${abiVersion}\\\\/${newJNIReanimatedPackage}/g'`,\n      [],\n      { shell: true }\n    );\n  }\n\n  // Update LOCAL_MODULE, LOCAL_SHARED_LIBRARIES, LOCAL_STATIC_LIBRARIES fields in .mk files\n  let [reactCommonMkFiles, reactAndroidMkFiles, reanimatedMKFiles] = await Promise.all([\n    glob(path.join(versionedReactCommonPath, '**/*.mk')),\n    glob(path.join(versionedReactAndroidJniPath, '**/*.mk')),\n    glob(path.join(versionedAbiPath, '**/*.mk')),\n  ]);\n  let filenames = [...reactCommonMkFiles, ...reactAndroidMkFiles, ...reanimatedMKFiles];\n  await Promise.all(filenames.map((filename) => processMkFileAsync(filename, abiVersion)));\n\n  // Rename references to JNI libs in Java code\n  for (let i = 0; i < JniLibNames.length; i++) {\n    let libName = JniLibNames[i];\n    await processJavaCodeAsync(libName, abiVersion);\n  }\n\n  // 'fbjni' is loaded without the 'lib' prefix in com.facebook.jni.Prerequisites\n  await processJavaCodeAsync('fbjni', abiVersion);\n  await processJavaCodeAsync('fb', abiVersion);\n\n  console.log('\\nThese are the JNI lib names we modified:');\n  await spawnAsync(\n    `find ${versionedReactAndroidJavaPath} ${versionedAbiPath} -name \"*.java\" | xargs grep -i \"_abi${abiVersion}\"`,\n    [],\n    { shell: true, stdio: 'inherit' }\n  );\n\n  console.log('\\nAnd here are all instances of loadLibrary:');\n  await spawnAsync(\n    `find ${versionedReactAndroidJavaPath} ${versionedAbiPath} -name \"*.java\" | xargs grep -i \"loadLibrary\"`,\n    [],\n    { shell: true, stdio: 'inherit' }\n  );\n\n  const { isCorrect } = await inquirer.prompt<{ isCorrect: boolean }>([\n    {\n      type: 'confirm',\n      name: 'isCorrect',\n      message: 'Does all that look correct?',\n      default: false,\n    },\n  ]);\n  if (!isCorrect) {\n    throw new Error('Fix JNI libs');\n  }\n}\n\nasync function copyUnimodulesAsync(version: string) {\n  const packages = await getListOfPackagesAsync();\n  for (const pkg of packages) {\n    if (\n      pkg.isSupportedOnPlatform('android') &&\n      pkg.isIncludedInExpoClientOnPlatform('android') &&\n      pkg.isVersionableOnPlatform('android')\n    ) {\n      await spawnAsync(\n        './android-copy-unimodule.sh',\n        [version, path.join(pkg.path, pkg.androidSubdirectory)],\n        {\n          shell: true,\n          cwd: SCRIPT_DIR,\n        }\n      );\n      console.log(`   ✅  Created versioned ${pkg.packageName}`);\n    }\n  }\n}\n\nasync function addVersionedActivitesToManifests(version: string) {\n  const abiVersion = version.replace(/\\./g, '_');\n  const abiName = `abi${abiVersion}`;\n  const majorVersion = semver.major(version);\n\n  await transformFileAsync(\n    templateManifestPath,\n    new RegExp('<!-- ADD DEV SETTINGS HERE -->'),\n    `<!-- ADD DEV SETTINGS HERE -->\n    <!-- BEGIN_SDK_${majorVersion} -->\n    <activity android:name=\"${abiName}.com.facebook.react.devsupport.DevSettingsActivity\"/>\n    <!-- END_SDK_${majorVersion} -->`\n  );\n\n  await transformFileAsync(\n    templateManifestPath,\n    new RegExp('<!-- Versioned Activity for Stripe -->'),\n    `<!-- Versioned Activity for Stripe -->\n    <!-- BEGIN_SDK_${majorVersion} -->\n    <activity\n      android:exported=\"true\"\n      android:launchMode=\"singleTask\"\n      android:name=\"${abiName}.expo.modules.payments.stripe.RedirectUriReceiver\"\n      android:theme=\"@android:style/Theme.Translucent.NoTitleBar.Fullscreen\">\n      <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"${abiName}.expo.modules.payments.stripe\" />\n      </intent-filter>\n    </activity>\n    <!-- END_SDK_${majorVersion} -->`\n  );\n}\n\nasync function registerNewVersionUnderSdkVersions(version: string) {\n  let fileString = await fs.readFile(sdkVersionsPath, 'utf8');\n  let jsConfig;\n  // read the existing json config and add the new version to the sdkVersions array\n  try {\n    jsConfig = JSON.parse(fileString);\n  } catch (e) {\n    console.log('Error parsing existing sdkVersions.json file, writing a new one...', e);\n    console.log('The erroneous file contents was:', fileString);\n    jsConfig = {\n      sdkVersions: [],\n    };\n  }\n  // apply changes\n  jsConfig.sdkVersions.push(version);\n  await fs.writeFile(sdkVersionsPath, JSON.stringify(jsConfig));\n}\n\nasync function cleanUpAsync(version: string) {\n  const abiVersion = version.replace(/\\./g, '_');\n  const abiName = `abi${abiVersion}`;\n\n  const versionedAbiSrcPath = path.join(\n    versionedExpoviewAbiPath(abiName),\n    'src/main/java',\n    abiName\n  );\n\n  let filesToDelete: string[] = [];\n\n  // delete PrintDocumentAdapter*Callback.java\n  // their package is `android.print` and therefore they are not changed by the versioning script\n  // so we will have duplicate classes\n  const printCallbackFiles = await glob(\n    path.join(versionedAbiSrcPath, 'expo/modules/print/*Callback.java')\n  );\n  for (const file of printCallbackFiles) {\n    const contents = await fs.readFile(file, 'utf8');\n    if (!contents.includes(`package ${abiName}`)) {\n      filesToDelete.push(file);\n    } else {\n      console.log(`Skipping deleting ${file} because it appears to have been versioned`);\n    }\n  }\n\n  // delete versioned loader providers since we don't need them\n  filesToDelete.push(path.join(versionedAbiSrcPath, 'expo/loaders'));\n\n  console.log('Deleting the following files and directories:');\n  console.log(filesToDelete);\n\n  for (const file of filesToDelete) {\n    await fs.remove(file);\n  }\n\n  // misc fixes for versioned code\n  const versionedExponentPackagePath = path.join(\n    versionedAbiSrcPath,\n    'host/exp/exponent/ExponentPackage.java'\n  );\n  await transformFileAsync(\n    versionedExponentPackagePath,\n    new RegExp('// WHEN_VERSIONING_REMOVE_FROM_HERE', 'g'),\n    '/* WHEN_VERSIONING_REMOVE_FROM_HERE'\n  );\n  await transformFileAsync(\n    versionedExponentPackagePath,\n    new RegExp('// WHEN_VERSIONING_REMOVE_TO_HERE', 'g'),\n    'WHEN_VERSIONING_REMOVE_TO_HERE */'\n  );\n\n  await transformFileAsync(\n    path.join(versionedAbiSrcPath, 'host/exp/exponent/VersionedUtils.java'),\n    new RegExp('// DO NOT EDIT THIS COMMENT - used by versioning scripts[^,]+,[^,]+,'),\n    'null, null,'\n  );\n\n  await transformFileAsync(\n    path.join(versionedAbiSrcPath, 'expo/modules/payments/stripe/PayFlow.java'),\n    new RegExp('// ADD BUILDCONFIG IMPORT HERE'),\n    `import ${abiName}.host.exp.expoview.BuildConfig;`\n  );\n\n  // replace abixx_x_x...R with abixx_x_x.host.exp.expoview.R\n  await spawnAsync(\n    `find ${versionedAbiSrcPath} -iname '*.java' -type f -print0 | ` +\n      `xargs -0 sed -i '' 's/import ${abiName}\\.[^;]*\\.R;/import ${abiName}.host.exp.expoview.R;/g'`,\n    [],\n    { shell: true }\n  );\n  await spawnAsync(\n    `find ${versionedAbiSrcPath} -iname '*.kt' -type f -print0 | ` +\n      `xargs -0 sed -i '' 's/import ${abiName}\\\\..*\\\\.R$/import ${abiName}.host.exp.expoview.R/g'`,\n    [],\n    { shell: true }\n  );\n\n  // add new versioned maven to build.gradle\n  await transformFileAsync(\n    buildGradlePath,\n    new RegExp('// For old expoviews to work'),\n    `// For old expoviews to work\n    maven {\n      url \"$rootDir/versioned-abis/expoview-${abiName}/maven\"\n    }`\n  );\n}\n\nasync function prepareReanimatedAsync(version: string): Promise<void> {\n  const abiVersion = version.replace(/\\./g, '_');\n  const abiName = `abi${abiVersion}`;\n  const versionedExpoviewPath = versionedExpoviewAbiPath(abiName);\n\n  const buildReanimatedSO = async () => {\n    await spawnAsync(`./gradlew :expoview-${abiName}:packageNdkLibs`, [], {\n      shell: true,\n      cwd: path.join(versionedExpoviewPath, '../../'),\n      stdio: 'inherit',\n    });\n  };\n\n  const removeLeftoverDirectories = async () => {\n    const mainPath = path.join(versionedExpoviewPath, 'src', 'main');\n    const toRemove = ['Common', 'JNI', 'cpp'];\n    for (let dir of toRemove) {\n      await fs.remove(path.join(mainPath, dir));\n    }\n  };\n\n  const removeLeftoversFromGradle = async () => {\n    await spawnAsync('./android-remove-reanimated-code-from-gradle.sh', [version], {\n      shell: true,\n      cwd: SCRIPT_DIR,\n      stdio: 'inherit',\n    });\n  };\n\n  await buildReanimatedSO();\n  await removeLeftoverDirectories();\n  await removeLeftoversFromGradle();\n}\n\nexport async function addVersionAsync(version: string) {\n  console.log(' 🛠   1/9: Updating android/versioned-react-native...');\n  await updateVersionedReactNativeAsync();\n  console.log(' ✅  1/9: Finished\\n\\n');\n\n  console.log(' 🛠   2/9: Creating versioned expoview package...');\n  await spawnAsync('./android-copy-expoview.sh', [version], {\n    shell: true,\n    cwd: SCRIPT_DIR,\n  });\n\n  console.log(' ✅  2/9: Finished\\n\\n');\n\n  console.log(' 🛠   3/9: Renaming JNI libs in android/versioned-react-native and Reanimated...');\n  await renameJniLibsAsync(version);\n  console.log(' ✅  3/9: Finished\\n\\n');\n\n  console.log(' 🛠   4/9: prepare versioned Reanimated...');\n  await prepareReanimatedAsync(version);\n  console.log(' ✅  4/9: Finished\\n\\n');\n\n  console.log(' 🛠   5/9: Building versioned ReactAndroid AAR...');\n  await spawnAsync('./android-build-aar.sh', [version], {\n    shell: true,\n    cwd: SCRIPT_DIR,\n    stdio: 'inherit',\n  });\n  console.log(' ✅  5/9: Finished\\n\\n');\n\n  console.log(' 🛠   6/9: Creating versioned unimodule packages...');\n  await copyUnimodulesAsync(version);\n  console.log(' ✅  6/9: Finished\\n\\n');\n\n  console.log(' 🛠   7/9: Adding extra versioned activites to AndroidManifest...');\n  await addVersionedActivitesToManifests(version);\n  console.log(' ✅  7/9: Finished\\n\\n');\n\n  console.log(' 🛠   8/9: Registering new version under sdkVersions config...');\n  await registerNewVersionUnderSdkVersions(version);\n  console.log(' ✅  8/9: Finished\\n\\n');\n\n  console.log(' 🛠   9/9: Misc cleanup...');\n  await cleanUpAsync(version);\n  console.log(' ✅  9/9: Finished');\n}\n"]}