{"version":3,"file":"libraries.js","sourceRoot":"","sources":["../../../src/versioning/android/libraries.ts"],"names":[],"mappings":";;;;;;AAAA,wDAA0B;AAC1B,gDAAwB;AACxB,mDAAoD;AAEvC,QAAA,WAAW,GAAG;IACzB,OAAO;IACP,UAAU;IACV,eAAe;IACf,cAAc;IACd,MAAM;IACN,gBAAgB;IAChB,kBAAkB;IAClB,WAAW;IACX,MAAM;IACN,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,yBAAyB;IACzB,aAAa;IACb,cAAc;IACd,cAAc;IACd,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,gBAAgB;IAChB,WAAW;IACX,mBAAmB;IACnB,iBAAiB;IACjB,gBAAgB;IAChB,QAAQ;IACR,yBAAyB;IACzB,uBAAuB;IACvB,YAAY;CACb,CAAC;AAEF,0EAA0E;AAC1E,8DAA8D;AACjD,QAAA,uBAAuB,GAAG,KAAK,IAAI,EAAE;IAChD,MAAM,gBAAgB,GAAG,MAAM,kBAAE,CAAC,QAAQ,CACxC,cAAI,CAAC,IAAI,CAAC,6BAAe,EAAE,EAAE,uDAAuD,CAAC,EACrF,MAAM,CACP,CAAC;IACF,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport { getExpotoolsDir } from '../../Directories';\n\nexport const JniLibNames = [\n  'libfb',\n  'libfbjni',\n  'libfolly_json',\n  'libglog_init',\n  'glog',\n  'reactnativejni',\n  'reactnativejnifb',\n  'csslayout',\n  'yoga',\n  'fbgloginit',\n  'yogajni',\n  'jschelpers',\n  'packagerconnectionjnifb',\n  'privatedata',\n  'yogafastmath',\n  'fabricjscjni',\n  'jscexecutor',\n  'libjscexecutor',\n  'jsinspector',\n  'libjsinspector',\n  'fabricjni',\n  'turbomodulejsijni',\n  'reactnativeblob',\n  'jsijniprofiler',\n  'hermes',\n  'hermes-executor-release',\n  'hermes-executor-debug',\n  'reanimated',\n];\n\n// this list is used in the shell scripts as well as directly by expotools\n// we read it in here to keep the source of truth in one place\nexport const getJavaPackagesToRename = async () => {\n  const packagesToRename = await fs.readFile(\n    path.join(getExpotoolsDir(), 'src/versioning/android/android-packages-to-rename.txt'),\n    'utf8'\n  );\n  return packagesToRename.split('\\n').filter((p: string) => !!p);\n};\n"]}