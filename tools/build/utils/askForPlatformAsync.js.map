{"version":3,"file":"askForPlatformAsync.js","sourceRoot":"","sources":["../../src/utils/askForPlatformAsync.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAIjB,KAAK,UAAU,mBAAmB,CAC/C,YAAwB,CAAC,KAAK,EAAE,SAAS,CAAC;IAE1C,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,0BAA0B,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACxE;IAED,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;KACrB;IAED,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,kBAAQ,CAAC,MAAM,CAAyB;QACjE;YACE,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,iDAAiD;YAC1D,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;YACrB,OAAO,EAAE,SAAS;SACnB;KACF,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;AAClB,CAAC;AArBD,sCAqBC","sourcesContent":["import inquirer from 'inquirer';\n\nimport { Platform } from '../ProjectVersions';\n\nexport default async function askForPlatformAsync(\n  platforms: Platform[] = ['ios', 'android']\n): Promise<Platform> {\n  if (process.env.CI) {\n    throw new Error(`Run with \\`--platform <${platforms.join(' | ')}>\\`.`);\n  }\n\n  if (platforms.length === 1) {\n    return platforms[0];\n  }\n\n  const { platform } = await inquirer.prompt<{ platform: Platform }>([\n    {\n      type: 'list',\n      name: 'platform',\n      message: 'For which platform you want to run this script?',\n      default: platforms[0],\n      choices: platforms,\n    },\n  ]);\n  return platform;\n}\n"]}