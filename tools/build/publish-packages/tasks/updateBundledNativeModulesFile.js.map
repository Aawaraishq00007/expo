{"version":3,"file":"updateBundledNativeModulesFile.js","sourceRoot":"","sources":["../../../src/publish-packages/tasks/updateBundledNativeModulesFile.ts"],"names":[],"mappings":";;;;;;AAAA,gEAAuC;AACvC,kDAA0B;AAC1B,gDAAwB;AAExB,+CAA2C;AAC3C,0DAAkC;AAClC,mDAAyC;AAEzC,uEAAoE;AAEpE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,eAAK,CAAC;AAE7C;;;GAGG;AACU,QAAA,8BAA8B,GAAG,IAAI,kBAAI,CACpD;IACE,IAAI,EAAE,gCAAgC;IACtC,SAAS,EAAE,CAAC,iDAAuB,CAAC;IACpC,YAAY,EAAE,CAAC,yCAAyC,CAAC;CAC1D,EACD,KAAK,EAAE,OAAiB,EAAE,EAAE;IAC1B,MAAM,wBAAwB,GAAG,cAAI,CAAC,IAAI,CAAC,oBAAQ,EAAE,yCAAyC,CAAC,CAAC;IAChG,MAAM,oBAAoB,GAAG,MAAM,mBAAQ,CAAC,SAAS,CACnD,wBAAwB,CACzB,CAAC;IAEF,gBAAM,CAAC,IAAI,CAAC,kBAAkB,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;IAEnF,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,OAAO,EAAE;QACpC,MAAM,YAAY,GAAG,oBAAoB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC3D,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;QAE5C,IAAI,CAAC,YAAY,EAAE;YACjB,gBAAM,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAClE,SAAS;SACV;QAED,gBAAM,CAAC,GAAG,CACR,IAAI,EACJ,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,EACtB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CACvD,CAAC;QAEF,oBAAoB,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;KAClD;IAED,MAAM,mBAAQ,CAAC,UAAU,CAAC,wBAAwB,EAAE,oBAAoB,CAAC,CAAC;AAC5E,CAAC,CACF,CAAC","sourcesContent":["import JsonFile from '@expo/json-file';\nimport chalk from 'chalk';\nimport path from 'path';\n\nimport { EXPO_DIR } from '../../Constants';\nimport logger from '../../Logger';\nimport { Task } from '../../TasksRunner';\nimport { Parcel, TaskArgs } from '../types';\nimport { selectPackagesToPublish } from './selectPackagesToPublish';\n\nconst { magenta, green, gray, cyan } = chalk;\n\n/**\n * Updates `bundledNativeModules.json` file in `expo` package.\n * It's used internally by some `expo-cli` commands so we know which package versions are compatible with `expo` version.\n */\nexport const updateBundledNativeModulesFile = new Task<TaskArgs>(\n  {\n    name: 'updateBundledNativeModulesFile',\n    dependsOn: [selectPackagesToPublish],\n    filesToStage: ['packages/expo/bundledNativeModules.json'],\n  },\n  async (parcels: Parcel[]) => {\n    const bundledNativeModulesPath = path.join(EXPO_DIR, 'packages/expo/bundledNativeModules.json');\n    const bundledNativeModules = await JsonFile.readAsync<Record<string, string>>(\n      bundledNativeModulesPath\n    );\n\n    logger.info(`\\n✏️  Updating ${magenta.bold('bundledNativeModules.json')} file...`);\n\n    for (const { pkg, state } of parcels) {\n      const currentRange = bundledNativeModules[pkg.packageName];\n      const newRange = `~${state.releaseVersion}`;\n\n      if (!currentRange) {\n        logger.log('  ', green(pkg.packageName), gray('is not defined.'));\n        continue;\n      }\n\n      logger.log(\n        '  ',\n        green(pkg.packageName),\n        `${cyan.bold(currentRange)} -> ${cyan.bold(newRange)}`\n      );\n\n      bundledNativeModules[pkg.packageName] = newRange;\n    }\n\n    await JsonFile.writeAsync(bundledNativeModulesPath, bundledNativeModules);\n  }\n);\n"]}