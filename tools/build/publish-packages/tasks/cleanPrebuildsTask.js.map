{"version":3,"file":"cleanPrebuildsTask.js","sourceRoot":"","sources":["../../../src/publish-packages/tasks/cleanPrebuildsTask.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAkC;AAClC,mDAAyC;AAGzC,2DAAsF;AAEtF;;GAEG;AACU,QAAA,kBAAkB,GAAG,IAAI,kBAAI,CACxC;IACE,IAAI,EAAE,oBAAoB;CAC3B,EACD,KAAK,EAAE,OAAiB,EAAE,EAAE;IAC1B,gBAAM,CAAC,GAAG,EAAE,CAAC;IAEb,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,+BAAkB,CAAC,CAAC;IAEjF,IAAI,eAAe,CAAC,MAAM,EAAE;QAC1B,gBAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC9C,MAAM,iCAAoB,CAAC,eAAe,CAAC,CAAC;KAC7C;AACH,CAAC,CACF,CAAC","sourcesContent":["import logger from '../../Logger';\nimport { Task } from '../../TasksRunner';\nimport { Parcel, TaskArgs } from '../types';\n\nimport { canPrebuildPackage, cleanFrameworksAsync } from '../../prebuilds/Prebuilder';\n\n/**\n * Cleans up after building prebuilds and publishing them.\n */\nexport const cleanPrebuildsTask = new Task<TaskArgs>(\n  {\n    name: 'cleanPrebuildsTask',\n  },\n  async (parcels: Parcel[]) => {\n    logger.log();\n\n    const packagesToClean = parcels.map(({ pkg }) => pkg).filter(canPrebuildPackage);\n\n    if (packagesToClean.length) {\n      logger.info('ðŸ§¹ Cleaning prebuilt resources');\n      await cleanFrameworksAsync(packagesToClean);\n    }\n  }\n);\n"]}